{"ast":null,"code":"var _jsxFileName = \"/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/components/DisplayKit.tsx\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nfunction DisplayKit(_ref) {\n  var _this = this;\n\n  var kitSelected = _ref.kitSelected,\n      isBefore = _ref.isBefore,\n      servings = _ref.servings;\n  var eachServingString = \"Each serving contains:\\n\";\n  var priceString = \"\\nPrice per serving $\" + (kitSelected == null ? void 0 : kitSelected.price);\n  var portionString = \"Selected portion size: \" + servings + \"\\n\";\n  var containString = \"Your \" + (kitSelected == null ? void 0 : kitSelected.name) + \" ingredients pack will contain:\\n\";\n\n  if (isBefore) {\n    return React.createElement(View, {\n      style: styles.parent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.picInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: kitSelected == null ? void 0 : kitSelected.title,\n      style: styles.slideImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.subtitleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, kitSelected == null ? void 0 : kitSelected.info)), React.createElement(View, {\n      style: styles.infoOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.subtitleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, eachServingString), kitSelected == null ? void 0 : kitSelected.ingredients.map(function (item, index) {\n      return React.createElement(Text, {\n        style: styles.ingrText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }\n      }, (kitSelected == null ? void 0 : kitSelected.quantity[index]) + \" \" + item);\n    }), React.createElement(Text, {\n      style: styles.subtitleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, priceString)));\n  } else {\n    return React.createElement(View, {\n      style: styles.parent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.picInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: kitSelected == null ? void 0 : kitSelected.title,\n      style: styles.slideImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.subtitleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, kitSelected == null ? void 0 : kitSelected.info)), React.createElement(View, {\n      style: styles.infoOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.subtitleAfterText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, portionString), React.createElement(Text, {\n      style: styles.subtitleAfterText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, containString), kitSelected == null ? void 0 : kitSelected.ingredients.map(function (item, index) {\n      return React.createElement(Text, {\n        style: styles.ingrAfterText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, (kitSelected == null ? void 0 : kitSelected.quantity[index]) * servings + \" \" + item);\n    })));\n  }\n}\n\nvar styles = StyleSheet.create({\n  parent: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flex: 1,\n    paddingBottom: '5%'\n  },\n  slideImg: {\n    resizeMode: 'contain',\n    height: '70%',\n    width: '100%'\n  },\n  subtitleText: {\n    color: '#2D2D2D',\n    fontSize: 25,\n    fontWeight: '400',\n    textAlign: 'center',\n    lineHeight: 30,\n    paddingVertical: '2%'\n  },\n  subtitleAfterText: {\n    color: '#2D2D2D',\n    fontSize: 25,\n    fontWeight: '400',\n    textAlign: 'left',\n    lineHeight: 30,\n    paddingLeft: '20%'\n  },\n  ingrText: {\n    color: '#2D2D2D',\n    fontSize: 25,\n    fontWeight: '400',\n    textAlign: 'left',\n    lineHeight: 40,\n    paddingLeft: '25%'\n  },\n  ingrAfterText: {\n    color: '#2D2D2D',\n    fontSize: 25,\n    fontWeight: '400',\n    textAlign: 'left',\n    lineHeight: 40,\n    paddingLeft: '20%'\n  },\n  picInfo: {\n    justifyContent: 'center',\n    flex: 1\n  },\n  infoOnly: {\n    flex: 1\n  }\n});\nexport default DisplayKit;","map":{"version":3,"sources":["/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/components/DisplayKit.tsx"],"names":["React","DisplayKit","kitSelected","isBefore","servings","eachServingString","priceString","price","portionString","containString","name","styles","parent","picInfo","title","slideImg","subtitleText","info","infoOnly","ingredients","map","item","index","ingrText","quantity","subtitleAfterText","ingrAfterText","StyleSheet","create","flexDirection","justifyContent","flex","paddingBottom","resizeMode","height","width","color","fontSize","fontWeight","textAlign","lineHeight","paddingVertical","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Image, Text, View, StyleSheet} from 'react-native';\n\nfunction DisplayKit({kitSelected, isBefore, servings}) {\n    const eachServingString = \"Each serving contains:\\n\"\n    const priceString = `\\nPrice per serving $${kitSelected?.price}`\n\n    const portionString = `Selected portion size: ${servings}\\n`;\n    const containString = `Your ${kitSelected?.name} ingredients pack will contain:\\n`\n\n    if (isBefore){\n        return (\n            <View style = {styles.parent}>\n                <View style={styles.picInfo}>\n                    <Image\n                    source={kitSelected?.title}\n                    style={styles.slideImg}\n                    />\n                    <Text style = {styles.subtitleText}>\n                    {kitSelected?.info}\n                    </Text>\n                </View>\n                <View style={styles.infoOnly}>\n                    <Text style = {styles.subtitleText}>\n                        {eachServingString}\n                    </Text>\n                    {\n                        kitSelected?.ingredients.map((item, index) => (\n                            <Text style= {styles.ingrText}>\n                                {`${kitSelected?.quantity[index]} ${item}`}\n                            </Text>\n                        )\n\n                        )\n                    }\n                    <Text style = {styles.subtitleText}>\n                        {priceString}\n                    </Text>\n                </View>\n            </View>\n\n        );\n    }else {\n        return (\n            <View style = {styles.parent}>\n                <View style={styles.picInfo}>\n                    <Image\n                    source={kitSelected?.title}\n                    style={styles.slideImg}\n                    />\n                    <Text style = {styles.subtitleText}>\n                    {kitSelected?.info}\n                    </Text>\n                </View>\n                <View style={styles.infoOnly}>\n                    <Text style = {styles.subtitleAfterText}>\n                        {portionString}\n                    </Text>\n                    <Text style = {styles.subtitleAfterText}>\n                        {containString}\n                    </Text>\n                    {\n                        kitSelected?.ingredients.map((item, index) => (\n                            <Text style= {styles.ingrAfterText}>\n                                {`${kitSelected?.quantity[index]*servings} ${item}`}\n                            </Text>\n                        )\n\n                        )\n                    }\n\n                </View>\n            </View>\n\n        );\n\n\n    }\n\n}\nconst styles = StyleSheet.create({\n    parent:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        flex: 1,\n        paddingBottom: '5%'\n    },\n    slideImg:{\n        resizeMode: 'contain',\n        height: '70%',\n        width: '100%',\n    },\n    subtitleText:{\n        color: '#2D2D2D',\n        fontSize: 25,\n        fontWeight: '400',\n        textAlign: 'center',\n        lineHeight: 30,\n        paddingVertical: '2%',\n\n    },\n    subtitleAfterText:{\n        color: '#2D2D2D',\n        fontSize: 25,\n        fontWeight: '400',\n        textAlign: 'left',\n        lineHeight: 30,\n        // paddingVertical: '2%',\n        paddingLeft: '20%',\n    },\n    ingrText:{\n        color: '#2D2D2D',\n        fontSize: 25,\n        fontWeight: '400',\n        textAlign: 'left',\n        lineHeight: 40,\n        paddingLeft: '25%',\n\n    },\n    ingrAfterText:{\n        color: '#2D2D2D',\n        fontSize: 25,\n        fontWeight: '400',\n        textAlign: 'left',\n        lineHeight: 40,\n        paddingLeft: '20%',\n\n    },\n    picInfo:{\n        // flexDirection: 'row',\n        justifyContent: 'center',\n        flex:1\n    },\n    infoOnly:{\n        flex: 1,\n\n    }\n\n});\n\nexport default DisplayKit;"]},"metadata":{},"sourceType":"module"}