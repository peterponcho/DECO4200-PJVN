{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import { StatusBar } from 'expo-status-bar';\n// import * as React from 'react';\n// import { Platform, StyleSheet, TextInput, Button } from 'react-native';\n// import DisplayPicture from '../components/DisplayPicture';\n// import CustomButton from '../components/CustomButton';\n// import { Camera } from 'expo-camera';\n\n// import EditScreenInfo from '../components/EditScreenInfo';\n// import { Text, View } from '../components/Themed';\n\n// export default function createNewPost() {\n//   const [hasCameraPermission, setHasCameraPermission] = React.useState(null);\n//   const [camera, setCamera] = React.useState(null);\n//   const [image, setImage] = React.useState(null);\n//   const [type, setType] = React.useState(Camera.Constants.Type.back);\n\n//   React.useEffect(() => {\n//     (async () => {\n//       const cameraStatus = await Camera.requestPermissionsAsync();\n//       setHasCameraPermission(cameraStatus.status === 'granted');\n\n\n//     })();\n//   }, []);\n\n//   const takePicture = async () => {\n//     if (camera) {\n//       const data = await camera.takePictureAsync(null);\n//       setImage(data.uri);\n//     }\n//   }\n\n//   if (hasCameraPermission === null) {\n//     return <View />;\n//   }\n//   if (hasCameraPermission === false) {\n//     return <Text>No access to camera</Text>;\n//   }\n\n//   const [postData, setPostData] = React.useState({\n//     id: '14',\n//     postType: null,\n//     img: null,\n//     text: null,\n//     desc: null,\n//     member: null,\n\n//   });\n//   const handleEditChange = text => {\n//     setPostData({\n//       id: '14',\n//       postType: null,\n//       img: null,\n//       text: null,\n//       desc: text,\n//       member: null,\n//     });\n//   };\n//   console.log(postData.desc);\n\n\n\n//   return (\n//     <View style={styles.container}>\n//       <View style={styles.textDesc}>\n//         <View style={styles.user}>\n//           <DisplayPicture/>\n//           <Text style={styles.title}>Me</Text>\n//         </View>\n\n//         <TextInput \n//         style={styles.textInputArea}\n//         placeholder=\"Tap to add text..\"\n//         onChangeText={handleEditChange}\n//         />\n\n//       </View>\n\n//       <View style={styles.cameraContainer}>\n//         <Camera\n//           ref={ref => setCamera(ref)}\n//           style={styles.fixedRatio}\n//           type={type}\n//           ratio={'1:1'} />\n//       </View>\n\n//       <Button\n//         title=\"Flip Image\"\n//         onPress={() => {\n//           setType(\n//             type === Camera.Constants.Type.back\n//               ? Camera.Constants.Type.front\n//               : Camera.Constants.Type.back\n//           );\n//         }}>\n//       </Button>\n//       <Button title=\"Take Picture\" onPress={() => takePicture()} />\n\n//       <View style = {styles.button}>\n//           <CustomButton title='Take photo' textSize={30} textLineHeight={30} />\n//       </View>\n\n//       <View style = {styles.button}>\n//           <CustomButton title='Post' textSize={30} textLineHeight={30} />\n//       </View>\n\n\n\n\n//     </View>\n\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     // flexDirection:'row',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     // backgroundColor: 'purple'\n//   },\n//   title: {\n//     fontSize: 20,\n//     fontWeight: 'bold',\n//   },\n//   textDesc:{\n//     // alignItems: 'flex-start',\n//     flex: 1,\n//     justifyContent: 'space-evenly',\n//     flexDirection:'row',\n//     width: '100%',\n//     backgroundColor: 'yellow'\n\n//   },\n//   user:{\n//     // width: '25%',\n//     flex: 1,\n//     backgroundColor: 'red',\n//     // height: '100%',\n//     // flexDirection: 'row',\n//     // alignItems: 'center',\n//     // justifyContent: 'space-evenly',\n\n// },\n// textInputArea:{\n//   flex: 5,\n//   // margin: '5%'\n// },\n// cameraArea:{\n//   flex: 4,\n//   width: '100%',\n//   backgroundColor:'blue'\n// },\n// button:{\n//   flex: 1,\n//   width: '100%'\n// },\n// cameraContainer: {\n//   flex: 1,\n//   flexDirection: 'row'\n// },\n// fixedRatio: {\n//   flex: 1,\n//   aspectRatio: 1\n// }\n//   // separator: {\n//   //   marginVertical: 30,\n//   //   height: 1,\n//   //   width: '80%',\n//   // },\n\n// });\n"]},"metadata":{},"sourceType":"script"}