{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/screens/ChoosingIngredients.tsx\";\n\nimport * as React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { dietaryList, allergies, navInfo, specialDiet, religiousReasons, kits } from \"../components/ChoosingIngredientsData\";\nimport DisplayKit from \"../components/DisplayKit\";\nvar windowWidth = Dimensions.get('window').width;\nvar dietReq = [];\nvar originalBalance = 60;\nvar test = [{\n  id: '1'\n}];\n\nvar ChoosingIngredients = function ChoosingIngredients(_ref) {\n  var navigation = _ref.navigation;\n  var ref = React.useRef();\n  var inputText = React.useRef();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      kitSelected = _React$useState2[0],\n      setKitSelected = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      countServing = _React$useState4[0],\n      setCountServing = _React$useState4[1];\n\n  var _React$useState5 = React.useState('Monday'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      deliveryDate = _React$useState6[0],\n      setDeliveryDate = _React$useState6[1];\n\n  var _React$useState7 = React.useState(originalBalance),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      balance = _React$useState8[0],\n      setBalance = _React$useState8[1];\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      currentSlideIndex = _React$useState10[0],\n      setCurrentSlideIndex = _React$useState10[1];\n\n  var _React$useState11 = React.useState(true),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      hasDiet = _React$useState12[0],\n      setHasDiet = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      inDietMenu = _React$useState14[0],\n      setInDietMenu = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      selected = _React$useState16[0],\n      setSelected = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      monSelected = _React$useState18[0],\n      setMonSelected = _React$useState18[1];\n\n  var _React$useState19 = React.useState(false),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      tuesSelected = _React$useState20[0],\n      setTuesSelected = _React$useState20[1];\n\n  var _React$useState21 = React.useState(false),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      wedSelected = _React$useState22[0],\n      setWedSelected = _React$useState22[1];\n\n  var _React$useState23 = React.useState(false),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      checkSelected = _React$useState24[0],\n      setCheckSelected = _React$useState24[1];\n\n  var _React$useState25 = React.useState(dietaryList),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      dietaryImg = _React$useState26[0],\n      setDietaryImg = _React$useState26[1];\n\n  var slides = [{\n    id: 'c1',\n    multipleImg: false,\n    hasQuestion: true,\n    image: require(\"../assets/images/yourTurn.png\"),\n    title: 'This week it’s your turn to pick the ingredient pack that the group is cooking with!',\n    subtitle: null,\n    question: 'How does picking ingredient work?',\n    nextText: 'Next',\n    indicator: 1\n  }, {\n    id: 'c2',\n    multipleImg: false,\n    hasQuestion: true,\n    image: null,\n    title: 'Do you have any allergies or dietary requirements we need to know about?',\n    subtitle: null,\n    question: 'What are dietary requirements?',\n    nextText: null,\n    indicator: 2\n  }, {\n    id: 'c3',\n    multipleImg: true,\n    hasQuestion: true,\n    image: dietaryImg,\n    title: 'What are they?',\n    subtitle: 'Not listed here? Let us know what it is.',\n    question: 'What are dietary requirements?',\n    nextText: 'Next',\n    indicator: 2\n  }, {\n    id: 'c4',\n    multipleImg: false,\n    hasQuestion: false,\n    image: require(\"../assets/images/thanks.png\"),\n    title: 'Thanks for that!',\n    subtitle: 'We’ll take this into account when picking your ingredients\\nand make sure they’re suitable for your preferences.\\n\\nThis data will be saved on your account so you don’t have to\\nrepeat this process again.',\n    question: null,\n    nextText: 'Next',\n    indicator: 2\n  }, {\n    id: 'c5',\n    multipleImg: false,\n    hasQuestion: true,\n    image: kits,\n    title: 'Pick your ingredient pack for this week!',\n    subtitle: null,\n    question: 'How do I pick my ingredients pack?',\n    nextText: 'Next',\n    indicator: 3\n  }, {\n    id: 'c6',\n    multipleImg: false,\n    hasQuestion: false,\n    image: kitSelected == null ? void 0 : kitSelected.title,\n    title: \"\" + (kitSelected == null ? void 0 : kitSelected.name),\n    subtitle: null,\n    question: null,\n    nextText: 'Choose this pack',\n    indicator: 3\n  }, {\n    id: 'c7',\n    multipleImg: false,\n    hasQuestion: false,\n    image: null,\n    title: 'Confirm your selection',\n    subtitle: 'Please note that you can’t make changes to your ingredients pack once you press confirm.',\n    question: null,\n    nextText: 'Confirm',\n    indicator: 3\n  }, {\n    id: 'c8',\n    multipleImg: false,\n    hasQuestion: false,\n    image: require(\"../assets/images/balance.png\"),\n    title: 'Well done for choosing the ingredient pack for your group this week!',\n    subtitle: 'Your remaining balance:',\n    question: null,\n    nextText: 'Next',\n    indicator: 3\n  }, {\n    id: 'c9',\n    multipleImg: false,\n    hasQuestion: true,\n    image: null,\n    title: 'Now let’s choose the delivery date.',\n    subtitle: 'Which day would you like your pack delivered to you?',\n    question: 'Why are there only 3 days?',\n    nextText: 'Confirm',\n    indicator: 4\n  }, {\n    id: 'c10',\n    multipleImg: false,\n    hasQuestion: false,\n    image: require(\"../assets/images/delivery.png\"),\n    title: \"Great! Your MealShare ingredient pack is scheduled to arrive on \" + deliveryDate + \".\",\n    subtitle: 'We’ll notify you when it’s out on its way to your home.\\nYou can track the delivery in the Bulletin Board. ',\n    nextText: 'Confirm',\n    indicator: 4\n  }];\n\n  var goNext = function goNext() {\n    if (currentSlideIndex == 6) {\n      setBalance(balance - (kitSelected == null ? void 0 : kitSelected.price) * countServing);\n    }\n\n    if (currentSlideIndex == 2) {\n      setInDietMenu(false);\n    }\n\n    if (currentSlideIndex == 1) {\n      setHasDiet(true);\n    }\n\n    var nextSlideIndex = currentSlideIndex + 1;\n\n    if (nextSlideIndex != slides.length) {\n      var offset = nextSlideIndex * windowWidth;\n      ref == null ? void 0 : ref.current.scrollToOffset({\n        offset: offset\n      });\n      setCurrentSlideIndex(currentSlideIndex + 1);\n    } else {\n      navigation.navigate(\"Mealshare\", {\n        screen: 'TabOne',\n        params: deliveryDate\n      });\n    }\n  };\n\n  var skipDiet = function skipDiet() {\n    var nextSlideIndex = currentSlideIndex + 2;\n\n    if (nextSlideIndex != slides.length) {\n      var offset = nextSlideIndex * windowWidth;\n      ref == null ? void 0 : ref.current.scrollToOffset({\n        offset: offset\n      });\n      setCurrentSlideIndex(currentSlideIndex + 2);\n    }\n\n    setHasDiet(false);\n  };\n\n  var goBack = function goBack() {\n    var num = 0;\n\n    if (currentSlideIndex == 3 && !hasDiet) {\n      num = 2;\n    } else {\n      num = 1;\n    }\n\n    if (currentSlideIndex == 2 && inDietMenu || currentSlideIndex == 3 && hasDiet) {\n      setDietaryImg(dietaryList);\n      setInDietMenu(false);\n    }\n\n    if (currentSlideIndex == 2 && inDietMenu) {\n      setDietaryImg(dietaryList);\n      return;\n    }\n\n    var nextSlideIndex = currentSlideIndex - num;\n\n    if (nextSlideIndex >= 0) {\n      var offset = nextSlideIndex * windowWidth;\n      ref == null ? void 0 : ref.current.scrollToOffset({\n        offset: offset\n      });\n      setCurrentSlideIndex(currentSlideIndex - num);\n    } else if (nextSlideIndex < 0) {\n      navigation.navigate(\"Mealshare\");\n    }\n  };\n\n  var dietaryHandler = function dietaryHandler(item, id) {\n    if (id.length == 1) {\n      setInDietMenu(true);\n\n      if (id == 1) {\n        setDietaryImg(allergies);\n      } else if (id == 2) {\n        setDietaryImg(specialDiet);\n      } else if (id == 3) {\n        setDietaryImg(religiousReasons);\n      }\n    } else {\n      item.color = item.color == '#FF792E' ? 'white' : '#FF792E';\n      setSelected(!selected);\n\n      if (dietReq.includes(id)) {\n        var idx = dietReq.indexOf(id);\n        dietReq.splice(idx, 1);\n      } else {\n        dietReq = [].concat(_toConsumableArray(dietReq), [id]);\n      }\n    }\n  };\n\n  var handleEditChange = function handleEditChange(text) {\n    inputText.current = text;\n  };\n\n  var submitDietHandler = function submitDietHandler() {\n    if (inputText.current !== \"\") {\n      setSelected(!selected);\n      dietReq = [].concat(_toConsumableArray(dietReq), [inputText.current]);\n    }\n\n    inputText.current = \"\";\n  };\n\n  var selectKitHandler = function selectKitHandler(item) {\n    var newNum = 0;\n    var total = (item == null ? void 0 : item.price) * countServing;\n\n    if (total > balance) {\n      while (newNum * (item == null ? void 0 : item.price) <= balance) {\n        newNum++;\n      }\n\n      setCountServing(newNum - 1);\n    }\n\n    setKitSelected(item);\n    var offset = (currentSlideIndex + 1) * windowWidth;\n    ref == null ? void 0 : ref.current.scrollToOffset({\n      offset: offset\n    });\n    setCurrentSlideIndex(currentSlideIndex + 1);\n  };\n\n  var servingSizeHandler = function servingSizeHandler(num) {\n    var newNum = countServing + num;\n    var total = (kitSelected == null ? void 0 : kitSelected.price) * newNum;\n    var newBalance = balance - total;\n\n    if (num < 0 && countServing > 1 || num > 0 && countServing >= 0 && newBalance >= 0) {\n      setCountServing(newNum);\n    }\n  };\n\n  var deliveryDateHandler = function deliveryDateHandler(day) {\n    setCheckSelected(true);\n    setDeliveryDate(day);\n\n    if (day === 'Monday') {\n      setMonSelected(true);\n      setTuesSelected(false);\n      setWedSelected(false);\n    } else if (day === 'Tuesday') {\n      setMonSelected(false);\n      setTuesSelected(true);\n      setWedSelected(false);\n    } else if (day === 'Wednesday') {\n      setMonSelected(false);\n      setTuesSelected(false);\n      setWedSelected(true);\n    }\n  };\n\n  var questionHandler = function questionHandler(index) {\n    if (index == 0) {\n      navigation.navigate('HowPickWork');\n    } else if (index == 1 || index == 2) {\n      navigation.navigate('WhatDiet');\n    } else if (index == 4) {\n      navigation.navigate('HowToPick');\n    } else if (index == 8) {\n      navigation.navigate('WhyThree');\n    }\n  };\n\n  var ButtonNav = function ButtonNav() {\n    var _slides$currentSlideI, _slides$currentSlideI2, _slides$currentSlideI3;\n\n    return React.createElement(View, {\n      style: styles.buttonNavs,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    }, currentSlideIndex != 7 && React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: goBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, \"Back\")), ((_slides$currentSlideI = slides[currentSlideIndex]) == null ? void 0 : _slides$currentSlideI.hasQuestion) && React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: function onPress() {\n        return questionHandler(currentSlideIndex);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonQuestionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }\n    }, (_slides$currentSlideI2 = slides[currentSlideIndex]) == null ? void 0 : _slides$currentSlideI2.question)), (currentSlideIndex != 1 && currentSlideIndex != 4 && currentSlideIndex != 8 || currentSlideIndex == 8 && checkSelected) && React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: goNext,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextNext,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    }, (_slides$currentSlideI3 = slides[currentSlideIndex]) == null ? void 0 : _slides$currentSlideI3.nextText)));\n  };\n\n  var NavIndicator = function NavIndicator() {\n    return React.createElement(View, {\n      style: styles.indicatorWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, navInfo.map(function (item, index) {\n      var _slides$currentSlideI4, _slides$currentSlideI5;\n\n      return React.createElement(View, {\n        key: index,\n        style: [styles.indicator, ((_slides$currentSlideI4 = slides[currentSlideIndex]) == null ? void 0 : _slides$currentSlideI4.indicator) >= (item == null ? void 0 : item.id) && {\n          backgroundColor: \"#205ECF\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.navText, !(((_slides$currentSlideI5 = slides[currentSlideIndex]) == null ? void 0 : _slides$currentSlideI5.indicator) >= (item == null ? void 0 : item.id)) && {\n          color: \"#C4C4C4\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }\n      }, item.title));\n    }));\n  };\n\n  var Slide = function Slide(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.mainScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.slideWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.titleText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }\n    }, item == null ? void 0 : item.title), !item.multipleImg && (item == null ? void 0 : item.image) && currentSlideIndex != 4 && currentSlideIndex != 5 && currentSlideIndex != 6 && React.createElement(Image, {\n      source: item == null ? void 0 : item.image,\n      style: styles.slideImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    }), item.multipleImg && React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.listImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 29\n      }\n    }, item.image.map(function (item, index) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.dietaryImg,\n        onPress: function onPress() {\n          return dietaryHandler(item, item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: [styles.checkbox, {\n          backgroundColor: item == null ? void 0 : item.color\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 37\n        }\n      }), React.createElement(Image, {\n        source: item.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        style: styles.subtitleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 37\n        }\n      }, item == null ? void 0 : item.subtitle));\n    }))), (inDietMenu && currentSlideIndex == 2 || !inDietMenu && currentSlideIndex != 2) && currentSlideIndex != 5 && currentSlideIndex != 6 && React.createElement(Text, {\n      style: styles.subtitleText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }\n    }, item == null ? void 0 : item.subtitle), inDietMenu && currentSlideIndex == 2 && React.createElement(TextInput, {\n      style: styles.textInputArea,\n      placeholder: \"Tap to start typing\",\n      onChangeText: handleEditChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 21\n      }\n    }), inDietMenu && currentSlideIndex == 2 && React.createElement(TouchableOpacity, {\n      onPress: submitDietHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.submitText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 25\n      }\n    }, \"Submit\")), currentSlideIndex == 4 && React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.listImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 29\n      }\n    }, kits.map(function (item, index) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return selectKitHandler(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 33\n        }\n      }, React.createElement(Image, {\n        source: item.title,\n        style: styles.kitImg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        style: styles.subtitleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 37\n        }\n      }, item == null ? void 0 : item.name));\n    }))), currentSlideIndex == 5 && React.createElement(FlatList, {\n      data: test,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.subtitleText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 25\n          }\n        }, 'Your current balance'), React.createElement(Text, {\n          style: styles.subtitleText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 25\n          }\n        }, \"$\" + balance), React.createElement(Text, {\n          style: styles.subtitleText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }\n        }, 'How many servings would you like?\\n'), React.createElement(View, {\n          style: styles.selectServingSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 25\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return servingSizeHandler(-1);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 29\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/minus.png\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 33\n          }\n        })), React.createElement(Text, {\n          style: styles.subtitleText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 29\n          }\n        }, \"\" + countServing), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return servingSizeHandler(1);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 29\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/add.png\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 33\n          }\n        }))), React.createElement(DisplayKit, {\n          kitSelected: kitSelected,\n          isBefore: true,\n          servings: countServing,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }\n    }), currentSlideIndex == 6 && React.createElement(FlatList, {\n      data: test,\n      renderItem: function renderItem(_ref4) {\n        var flitem = _ref4.flitem;\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.subtitleText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 29\n          }\n        }, \"Total cost for \" + countServing + \" \" + (countServing == 1 ? 'serving:' : 'servings:')), React.createElement(Text, {\n          style: styles.subtitleText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 29\n          }\n        }, \"$\" + countServing * (kitSelected == null ? void 0 : kitSelected.price) + \"\\n\"), React.createElement(Text, {\n          style: styles.subtitleText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 29\n          }\n        }, (item == null ? void 0 : item.subtitle) + \"\\n\\n\"), React.createElement(DisplayKit, {\n          kitSelected: kitSelected,\n          isBefore: false,\n          servings: countServing,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 29\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 21\n      }\n    }), currentSlideIndex == 7 && React.createElement(Text, {\n      style: styles.titleText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 25\n      }\n    }, \"$\" + balance), currentSlideIndex == 8 && React.createElement(View, {\n      style: styles.deliveryDate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 25\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deliveryDateHandler('Monday');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: [styles.dateBtn, {\n        backgroundColor: monSelected ? '#FF792E' : '#FFE7D9'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: [styles.dateText, {\n        color: monSelected ? 'white' : '#FF792E'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 37\n      }\n    }, 'Monday\\n25'))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deliveryDateHandler('Tuesday');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: [styles.dateBtn, {\n        backgroundColor: tuesSelected ? '#FF792E' : '#FFE7D9'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: [styles.dateText, {\n        color: tuesSelected ? 'white' : '#FF792E'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 37\n      }\n    }, 'Tuesday\\n26'))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deliveryDateHandler('Wednesday');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: [styles.dateBtn, {\n        backgroundColor: wedSelected ? '#FF792E' : '#FFE7D9'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: [styles.dateText, {\n        color: wedSelected ? 'white' : '#FF792E'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 37\n      }\n    }, 'Wednesday\\n27')))), currentSlideIndex == 1 && React.createElement(View, {\n      style: styles.answerBtn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: skipDiet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextNo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 29\n      }\n    }, \"No\")), React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: goNext,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextYes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 29\n      }\n    }, \"Yes\")))));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.onboardingBg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 9\n    }\n  }, React.createElement(NavIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    ref: ref,\n    showsHorizontalScrollIndicator: false,\n    horizontal: true,\n    data: slides,\n    extraData: selected,\n    pagingEnabled: true,\n    scrollEnabled: false,\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item;\n      return React.createElement(Slide, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 41\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 13\n    }\n  }), React.createElement(ButtonNav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  onboardingBg: {\n    backgroundColor: '#F3EDE5',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '1%'\n  },\n  mainScreen: {\n    width: windowWidth,\n    paddingRight: '10%',\n    paddingLeft: '10%',\n    paddingTop: '5%',\n    justifyContent: 'center',\n    flex: 1\n  },\n  slideWrapper: {\n    justifyContent: 'center',\n    flex: 1,\n    backgroundColor: '#FBF9F8',\n    borderRadius: 30\n  },\n  slideImg: {\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    height: '40%',\n    width: '90%',\n    paddingBottom: '10%'\n  },\n  nextButton: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  titleText: {\n    color: '#2D2D2D',\n    fontSize: 30,\n    lineHeight: 40,\n    fontWeight: '500',\n    textAlign: 'center',\n    paddingHorizontal: '10%',\n    paddingBottom: '2%'\n  },\n  subtitleText: {\n    color: '#2D2D2D',\n    fontSize: 25,\n    fontWeight: '400',\n    textAlign: 'center',\n    lineHeight: 30\n  },\n  submitText: {\n    color: '#2D2D2D',\n    fontSize: 25,\n    fontWeight: '400',\n    textAlign: 'center',\n    lineHeight: 30,\n    paddingBottom: '5%'\n  },\n  buttonNavs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: windowWidth,\n    flex: 1\n  },\n  buttonTextBack: {\n    fontSize: 30\n  },\n  buttonTextNext: {\n    fontSize: 30,\n    color: '#FF792E'\n  },\n  buttonTextNo: {\n    fontSize: 30,\n    color: '#666666'\n  },\n  buttonTextYes: {\n    fontSize: 30,\n    color: '#FF792E'\n  },\n  buttonQuestionText: {\n    fontSize: 20,\n    color: '#205ECF'\n  },\n  answerBtn: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingHorizontal: '15%'\n  },\n  indicator: {\n    flex: 1,\n    height: 40,\n    width: 50,\n    backgroundColor: '#EDE7E7',\n    marginHorizontal: 3,\n    borderRadius: 5,\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  indicatorWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginHorizontal: '10%'\n  },\n  navText: {\n    fontSize: 15,\n    fontWeight: '500',\n    textAlign: 'center',\n    color: '#fff'\n  },\n  textInputArea: {\n    height: 50,\n    width: 500,\n    padding: 10,\n    fontSize: 30,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: 'white',\n    shadowColor: 'black',\n    alignSelf: 'center',\n    marginBottom: '5%'\n  },\n  dietaryImg: {\n    padding: '2%'\n  },\n  listImg: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    flex: 1\n  },\n  kitImg: {\n    margin: '1%',\n    resizeMode: 'contain',\n    height: 250,\n    width: 250\n  },\n  checkbox: {\n    height: 50,\n    width: 50,\n    borderRadius: 100,\n    position: 'absolute',\n    zIndex: 1,\n    top: 30,\n    left: 180\n  },\n  selectServingSize: {\n    flexDirection: 'row',\n    paddingHorizontal: '20%',\n    paddingBottom: '5%',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flex: 1\n  },\n  deliveryDate: {\n    paddingTop: '5%',\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  dateText: {\n    fontSize: 30,\n    lineHeight: 40,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  dateBtn: {\n    width: 200,\n    height: 300,\n    borderRadius: 100,\n    justifyContent: 'center'\n  }\n});\nexport default ChoosingIngredients;","map":{"version":3,"sources":["/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/screens/ChoosingIngredients.tsx"],"names":["React","dietaryList","allergies","navInfo","specialDiet","religiousReasons","kits","DisplayKit","windowWidth","Dimensions","get","width","dietReq","originalBalance","test","id","ChoosingIngredients","navigation","ref","useRef","inputText","useState","kitSelected","setKitSelected","countServing","setCountServing","deliveryDate","setDeliveryDate","balance","setBalance","currentSlideIndex","setCurrentSlideIndex","hasDiet","setHasDiet","inDietMenu","setInDietMenu","selected","setSelected","monSelected","setMonSelected","tuesSelected","setTuesSelected","wedSelected","setWedSelected","checkSelected","setCheckSelected","dietaryImg","setDietaryImg","slides","multipleImg","hasQuestion","image","require","title","subtitle","question","nextText","indicator","name","goNext","price","nextSlideIndex","length","offset","current","scrollToOffset","navigate","screen","params","skipDiet","goBack","num","dietaryHandler","item","color","includes","idx","indexOf","splice","handleEditChange","text","submitDietHandler","selectKitHandler","newNum","total","servingSizeHandler","newBalance","deliveryDateHandler","day","questionHandler","index","ButtonNav","styles","buttonNavs","nextButton","buttonTextBack","buttonQuestionText","buttonTextNext","NavIndicator","indicatorWrapper","map","backgroundColor","navText","Slide","mainScreen","slideWrapper","titleText","slideImg","flex","alignItems","listImg","checkbox","subtitleText","textInputArea","submitText","kitImg","selectServingSize","flitem","dateBtn","dateText","answerBtn","buttonTextNo","buttonTextYes","onboardingBg","StyleSheet","create","justifyContent","padding","paddingRight","paddingLeft","paddingTop","borderRadius","alignSelf","resizeMode","height","paddingBottom","fontSize","lineHeight","fontWeight","textAlign","paddingHorizontal","flexDirection","marginHorizontal","borderWidth","borderColor","shadowColor","marginBottom","flexWrap","margin","position","zIndex","top","left"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextInput, SafeAreaView, View, Image, Text, StyleSheet, Dimensions, FlatList, TouchableOpacity, ScrollView } from 'react-native';\nimport { dietaryList, allergies, navInfo, specialDiet, religiousReasons, kits } from '../components/ChoosingIngredientsData';\nimport DisplayKit from '../components/DisplayKit';\nconst windowWidth = Dimensions.get('window').width;\n\nlet dietReq = []; // Captures dietary requirements input from users, if needed.\nlet originalBalance = 60; // dummy balance that user has.\nconst test=[{id: '1'}]; // Dummy list for flatlist.\n\n\nconst ChoosingIngredients = ({navigation}) => {\n    const ref = React.useRef(); // Reference the flatlist (slides)\n    const inputText = React.useRef(); // additional dietary requirements input text\n\n    const [kitSelected, setKitSelected] = React.useState(null); // ingredient pack that user selects.\n    const [countServing, setCountServing] = React.useState(1); // serving size that user selects.\n    const [deliveryDate, setDeliveryDate] = React.useState('Monday'); // delivery date that user selects.\n    const [balance, setBalance] = React.useState(originalBalance); // dummy balance for user.\n    const [currentSlideIndex, setCurrentSlideIndex] = React.useState(0);\n    const [hasDiet, setHasDiet] = React.useState(true); // skip dietary requirements slide if set to true.\n    const [inDietMenu, setInDietMenu] = React.useState(false); // indicates user is in dietary menu if set to true.\n    const [selected, setSelected] = React.useState(false); //  toggle for dietary checkbox.\n\n    // Delivery date.\n    const [monSelected, setMonSelected] = React.useState(false);\n    const [tuesSelected, setTuesSelected] = React.useState(false);\n    const [wedSelected, setWedSelected] = React.useState(false);\n    const [checkSelected, setCheckSelected] = React.useState(false);\n\n    // Display images for dietary requirements menu. \n    const [dietaryImg, setDietaryImg] = React.useState(dietaryList);\n\n    // Slides.\n    const slides=[\n        {\n            id: 'c1',\n            multipleImg: false,\n            hasQuestion: true,\n            image: require('../assets/images/yourTurn.png'),\n            title: 'This week it’s your turn to pick the ingredient pack that the group is cooking with!',\n            subtitle: null,\n            question: 'How does picking ingredient work?',\n            nextText: 'Next',\n            indicator: 1,\n\n        },\n        {\n            id: 'c2',\n            multipleImg: false,\n            hasQuestion: true,\n            image: null,\n            title: 'Do you have any allergies or dietary requirements we need to know about?',\n            subtitle: null,\n            question: 'What are dietary requirements?',\n            nextText: null,\n            indicator: 2,\n    \n        },\n        \n        {\n            id: 'c3',\n            multipleImg: true,\n            hasQuestion: true,\n            image: dietaryImg,\n            title: 'What are they?',\n            subtitle: 'Not listed here? Let us know what it is.',\n            question: 'What are dietary requirements?',\n            nextText: 'Next',\n            indicator: 2,\n    \n        },\n        {\n            id: 'c4',\n            multipleImg: false,\n            hasQuestion: false,\n            image: require('../assets/images/thanks.png'),\n            title: 'Thanks for that!',\n            subtitle: 'We’ll take this into account when picking your ingredients\\nand make sure they’re suitable for your preferences.\\n\\nThis data will be saved on your account so you don’t have to\\nrepeat this process again.',\n            question: null,\n            nextText: 'Next',\n            indicator: 2,\n        },{\n            id: 'c5',\n            multipleImg: false,\n            hasQuestion: true,\n            image: kits,\n            title: 'Pick your ingredient pack for this week!',\n            subtitle: null,\n            question: 'How do I pick my ingredients pack?',\n            nextText: 'Next',\n            indicator: 3,\n        },\n        {\n            id: 'c6',\n            multipleImg: false,\n            hasQuestion: false,\n            image: kitSelected?.title,\n            title:`${kitSelected?.name}`,\n            subtitle: null,\n            question: null,\n            nextText: 'Choose this pack',\n            indicator: 3,\n        },\n        {\n            id: 'c7',\n            multipleImg: false,\n            hasQuestion: false,\n            image: null,\n            title: 'Confirm your selection',\n            subtitle: 'Please note that you can’t make changes to your ingredients pack once you press confirm.',\n            question: null,\n            nextText: 'Confirm',\n            indicator: 3,\n    \n        },\n        {\n            id: 'c8',\n            multipleImg: false,\n            hasQuestion: false,\n            image: require('../assets/images/balance.png'),\n            title: 'Well done for choosing the ingredient pack for your group this week!',\n            subtitle: 'Your remaining balance:',\n            question: null,\n            nextText: 'Next',\n            indicator: 3,\n    \n        },\n        {\n            id: 'c9',\n            multipleImg: false,\n            hasQuestion: true,\n            image: null,\n            title: 'Now let’s choose the delivery date.',\n            subtitle:'Which day would you like your pack delivered to you?',\n            question:'Why are there only 3 days?',\n            nextText: 'Confirm',\n            indicator: 4,\n        },\n        {\n            id: 'c10',\n            multipleImg: false,\n            hasQuestion: false,\n            image: require('../assets/images/delivery.png'),\n            title: `Great! Your MealShare ingredient pack is scheduled to arrive on ${deliveryDate}.`,\n            subtitle: 'We’ll notify you when it’s out on its way to your home.\\nYou can track the delivery in the Bulletin Board. ',\n            nextText: 'Confirm',\n            indicator: 4,\n        }\n    \n    ];\n\n\n\n    // Handles next button\n    const goNext = () => {\n\n        // Changes balance after user confirms their ingredient pack.\n        if (currentSlideIndex == 6){\n            setBalance (balance -(kitSelected?.price * countServing));\n\n        }\n        // Indication if user is in checkbox menu.\n        if (currentSlideIndex == 2){\n            setInDietMenu(false);\n        }\n        // Does not skip dietary part if user pressed yes when asked dietary requirements.\n        if (currentSlideIndex == 1){\n            setHasDiet(true);\n        }\n\n        // Go to next slide.\n        // Or to bulletin board if no slides left.\n        const nextSlideIndex = currentSlideIndex + 1;\n        if (nextSlideIndex != slides.length) {\n            const offset = nextSlideIndex * windowWidth;\n            ref?.current.scrollToOffset({offset});\n            setCurrentSlideIndex(currentSlideIndex + 1);\n\n        }else{\n            // navigation.navigate(\"Mealshare\");\n            //navigation.navigate(\"Mealshare\", {params: [deliveryDate]});\n            navigation.navigate(\"Mealshare\", {screen: 'TabOne', params: deliveryDate} );\n        }\n\n    \n    };\n\n    // Handles next button when user has no dietary requirements\n    const skipDiet = () => {\n\n        // Skip dietary requirements slide.\n        const nextSlideIndex = currentSlideIndex + 2;\n        if (nextSlideIndex != slides.length) {\n            const offset = nextSlideIndex * windowWidth;\n            ref?.current.scrollToOffset({offset});\n            setCurrentSlideIndex(currentSlideIndex + 2);\n\n        }\n\n        setHasDiet(false);\n    };\n\n\n    // Handles back button.\n    const goBack = () => {\n        // Skips dietary requirement slide if user pressed no previously.\n        let num = 0;\n        if (currentSlideIndex == 3 && !hasDiet){\n            // console.log(\"yes\");\n            num = 2;\n        }else{\n            num = 1;\n        }\n\n        // go back to previous menu according to where users are in the dietary requiremets slide.\n        if (currentSlideIndex == 2 && inDietMenu|| currentSlideIndex == 3 && hasDiet ){\n            setDietaryImg(dietaryList);\n            setInDietMenu(false);\n        }\n\n        if (currentSlideIndex == 2 && inDietMenu){\n\n            setDietaryImg(dietaryList);\n            return;\n        }\n\n        // Go back to previous slide\n        // Or to bulletin board if first slide.\n        const nextSlideIndex = currentSlideIndex - num;\n        if (nextSlideIndex >=0) {\n            const offset = nextSlideIndex * windowWidth;\n            ref?.current.scrollToOffset({offset});\n            setCurrentSlideIndex(currentSlideIndex - num);\n        }else if(nextSlideIndex <0){\n            navigation.navigate(\"Mealshare\");\n\n        }\n\n    };\n\n    // Handles buttons in dietary requirements menu\n    const dietaryHandler = (item, id) =>{\n        // Id 0 indicates allergies menu\n        // Id 1 indicates intolerances menu\n        // Id 2 indicates religious reasons menu\n\n        // Change image according to which menu user selects.\n        if (id.length == 1){\n            setInDietMenu(true);\n            if (id == 1){\n                setDietaryImg(allergies);\n                \n            }else if (id == 2){\n                setDietaryImg(specialDiet);\n\n            }else if (id == 3){\n                setDietaryImg(religiousReasons);\n            }\n\n        }else{\n            \n            // Handles checkboxes when user is in a menu\n            item.color = item.color == '#FF792E' ? 'white' : '#FF792E';\n            setSelected(!selected);\n\n            // Deletes input if unchecked.\n            if (dietReq.includes(id)){\n                const idx = dietReq.indexOf(id);\n                dietReq.splice(idx, 1);\n            \n            // Adds input if unchecked.\n            }else{\n                dietReq = [...dietReq, id];\n            }\n\n            \n        }\n\n    }\n\n    // Captures text input of custom dietary requirements.\n    const handleEditChange = (text: string) =>{\n        inputText.current = text;\n\n    }\n\n    // Adds custom text input of dietary requirements.\n    const submitDietHandler = () =>{\n        // Input text is submited after user presses enter and the submit button.\n        if (inputText.current !== \"\"){\n            setSelected(!selected);\n            dietReq = [...dietReq, inputText.current];\n\n        }\n\n        inputText.current= \"\";\n    }\n\n    // Set selected kit and go to next slide.\n    const selectKitHandler = (item) => {\n\n        // Make sure to change maximum number of servings.\n        // Else user would have negative balance.\n        let newNum = 0;\n        const total = item?.price * countServing;\n\n        if (total > balance){\n            while(newNum* item?.price <= balance){\n                newNum ++;\n            }\n            \n            setCountServing(newNum-1);\n        }\n        \n        setKitSelected(item); // set the ingredient kit user selects.\n\n        // Go to next slide.\n        const offset = (currentSlideIndex +1) * windowWidth;\n        ref?.current.scrollToOffset({offset});\n        setCurrentSlideIndex(currentSlideIndex + 1);\n    }\n\n    // Handles serving size buttons.\n    const servingSizeHandler = (num) => {\n        \n        // num is -1 when user presses the '-' button, 1 when user presses '+' button.\n        const newNum = countServing + num;\n        const total = kitSelected?.price * newNum;\n        const newBalance = balance - total;\n        \n        // Make sure that servings is at least 1 and not more than balance user has.\n        if ((num <0 && countServing >1)|| (num >0 && countServing >=0) && newBalance >= 0){\n            setCountServing(newNum);\n        }\n\n        \n    }\n\n    // Handles the delivery date buttons.\n    const deliveryDateHandler = (day) => {\n\n        setCheckSelected(true);\n        setDeliveryDate(day);\n\n        if (day === 'Monday'){\n            setMonSelected(true);\n            setTuesSelected(false);\n            setWedSelected(false);\n\n        }else if (day === 'Tuesday'){\n            setMonSelected(false);\n            setTuesSelected(true);\n            setWedSelected(false);\n\n        }else if (day === 'Wednesday'){\n            setMonSelected(false);\n            setTuesSelected(false);\n            setWedSelected(true);\n        }\n\n    }\n\n    // Handles the questions button.\n    const questionHandler = (index) => {\n        if (index == 0){\n            navigation.navigate('HowPickWork');\n        }else if (index == 1 || index == 2){\n            navigation.navigate('WhatDiet');\n        }else if (index == 4){\n            navigation.navigate('HowToPick');\n        }else if (index == 8){\n            navigation.navigate('WhyThree');\n        }\n\n    }\n\n\n    // Bottom navigation buttons of the screen.\n    const ButtonNav = () => {\n        return (\n            <View\n            style = {styles.buttonNavs}>\n\n                {/* No back button after user confirms ingredient pack*/}\n                { currentSlideIndex != 7 &&\n                <TouchableOpacity \n                style={styles.nextButton}\n                onPress={goBack}>\n                    <Text\n                        style = {styles.buttonTextBack}>\n                        Back\n                    </Text>\n                </TouchableOpacity>}\n                \n                {/* question button */}\n                {slides[currentSlideIndex]?.hasQuestion && \n                <TouchableOpacity \n                style={styles.nextButton}\n                onPress={() => questionHandler(currentSlideIndex)}>\n                    <Text\n                        style={styles.buttonQuestionText}>\n                        {slides[currentSlideIndex]?.question}\n                    </Text>\n\n                </TouchableOpacity>\n                }\n                \n                {/* Next button. No next button when user is asked dietary requirements */}\n                { ((currentSlideIndex != 1 &&\n                currentSlideIndex != 4 && currentSlideIndex != 8) ||\n                (currentSlideIndex == 8 && checkSelected)) &&\n                <TouchableOpacity \n                    style={styles.nextButton}\n                    onPress={goNext}>\n                    <Text\n                        style={styles.buttonTextNext}>\n                        {slides[currentSlideIndex]?.nextText}\n                    </Text>\n                </TouchableOpacity>}\n\n\n            </View>\n        );\n    }\n\n    // Top navigation indicator bar component.\n    const NavIndicator = () =>{\n\n        return(\n            <View\n                style={styles.indicatorWrapper}>\n\n                {navInfo.map((item, index) => (\n                <View\n                    key={index}\n                    style={[\n                    styles.indicator,\n                    (slides[currentSlideIndex]?.indicator >= item?.id)\n                    && {\n                        backgroundColor: \"#205ECF\",\n\n                    },\n                    ]}>\n                        <Text style = {[styles.navText,   \n                        !(slides[currentSlideIndex]?.indicator >= item?.id)\n                        && {\n                        color: \"#C4C4C4\"}]}>{item.title}</Text>\n                </View>\n                ))}\n\n\n            </View>\n\n        );\n\n    }\n\n    // Slide component.\n    const Slide = ({item}) => {\n\n        return(\n            <View style= {styles.mainScreen}>\n                <View style= {styles.slideWrapper}>\n\n                    {/* Title of slide */}\n                    <Text\n                    style={styles.titleText}>\n                        {item?.title}\n                    </Text>\n    \n                    {/* Single imae of slide */}\n                    {!item.multipleImg && \n                    item?.image && \n                    currentSlideIndex != 4  \n                    && currentSlideIndex != 5 \n                    && currentSlideIndex != 6 &&\n                    <Image\n                    source={item?.image}\n                    style={styles.slideImg}\n                    />}\n\n                    {/* Dietary requirements slide */}\n                    {item.multipleImg && \n                        <View\n                        style={{ flex: 1, alignItems: 'center'}}>\n\n                            <View\n                                style = {styles.listImg}>\n                                \n\n                                {item.image.map((item, index) => (\n                                    \n                                <TouchableOpacity\n                                    style = {styles.dietaryImg}\n                                    onPress= {() => dietaryHandler(item, item.id)}>\n\n                                    <View style={[styles.checkbox, {backgroundColor: item?.color}]} />\n                                    <Image source={item.title}/>\n                                    <Text style={styles.subtitleText}>\n                                        {item?.subtitle}\n                                    </Text>\n\n                                </TouchableOpacity>\n\n                                ))}\n                            </View>\n                        </View>\n                    }\n\n                    {/* Subtitle of slide. */}\n                    {((inDietMenu && currentSlideIndex == 2 ) ||\n                    (!inDietMenu && currentSlideIndex != 2 ) ) &&\n                    currentSlideIndex != 5 &&\n                    currentSlideIndex != 6 &&\n                    <Text\n                    style= {styles.subtitleText}>\n                        {item?.subtitle}\n                    </Text>\n                    \n                    }\n\n                    {/* Text input for dietary requirements */}\n                    {(inDietMenu && currentSlideIndex == 2 ) &&\n                    <TextInput \n                    style={styles.textInputArea}\n                    placeholder=\"Tap to start typing\"\n                    onChangeText={handleEditChange}\n                    />}\n\n                    {(inDietMenu && currentSlideIndex == 2 ) &&\n                    <TouchableOpacity\n                    onPress= {submitDietHandler}>\n                        <Text\n                        style = {styles.submitText}>\n                            Submit\n                        </Text>\n                    </TouchableOpacity>\n                    }\n\n                    {/* Select kits slide */}\n                    {currentSlideIndex == 4 && \n                        <View\n                        style={{ flex: 1, alignItems: 'center'}}>\n\n                            <View\n                                style = {styles.listImg}>\n                                \n\n                                {kits.map((item, index) => (\n                                    \n                                <TouchableOpacity\n                                    onPress= {() => selectKitHandler(item)}>\n\n                                    <Image\n                                    source={item.title}\n                                    style={styles.kitImg}\n                                    />\n                                    <Text\n                                    style={styles.subtitleText}>{item?.name}</Text>\n\n                                    \n                                </TouchableOpacity>\n\n                                ))}\n                            </View>\n                        </View>\n                    }\n\n                    {/* View kits slide. */}\n                    {currentSlideIndex == 5 &&\n                    <FlatList\n                    data={test}\n                    renderItem={({item}) => (\n\n                    <View style={{flex:1}}>                        \n                        <Text style = {styles.subtitleText}>\n                        {'Your current balance'}\n                        </Text>\n                        <Text style = {styles.subtitleText}>\n                            {`$${balance}`}\n                        </Text>\n                        <Text style = {styles.subtitleText}>\n                            {'How many servings would you like?\\n'}\n                        </Text>\n                        <View style = {styles.selectServingSize}>\n                            <TouchableOpacity\n                                onPress= {() => servingSizeHandler(-1)}>\n                                <Image\n                                source={require('../assets/images/minus.png')}\n                                />\n                            </TouchableOpacity>\n                            <Text style = {styles.subtitleText}>\n                                {`${countServing}`}\n                            </Text>\n                            <TouchableOpacity\n                                onPress= {() => servingSizeHandler(1)}>\n                                <Image\n                                source={require('../assets/images/add.png')}\n                                />\n                            </TouchableOpacity>\n                        </View>\n                        <DisplayKit kitSelected = {kitSelected} isBefore = {true} servings = {countServing}></DisplayKit>\n\n                    </View>\n                        \n                    )}/>}\n\n                    {/* Confirm kits slide. */}\n                    {currentSlideIndex == 6 &&\n                    <FlatList\n                    data={test}\n                    renderItem={({flitem}) => (\n                        <View>\n                            <Text style = {styles.subtitleText}>\n                            {`Total cost for ${countServing} `+ (countServing == 1 ? 'serving:':'servings:')}\n                            </Text>\n                            <Text style = {styles.subtitleText}>\n                                {`$${countServing*kitSelected?.price}\\n`}\n                            </Text>\n                            <Text style = {styles.subtitleText}>\n                                {`${item?.subtitle}\\n\\n`}\n                            </Text>\n                            <DisplayKit kitSelected = {kitSelected} isBefore = {false} servings = {countServing}></DisplayKit>\n                        </View>\n\n                    )}/>} \n\n                    {/* Balance slide after choosing kit. */}\n                    {currentSlideIndex == 7 &&\n                        <Text style={styles.titleText}>\n                            {`$${balance}`}\n                        </Text>\n                    } \n\n                    {/* Choose delivery date slide. */}\n                    {currentSlideIndex == 8 &&\n                        <View style={styles.deliveryDate}>\n                            <TouchableOpacity\n                                onPress= {() => deliveryDateHandler('Monday')}>\n                                <View style= {[styles.dateBtn, {backgroundColor: monSelected? '#FF792E':'#FFE7D9'}]}>\n                                    <Text style={[styles.dateText, { color: monSelected? 'white': '#FF792E'}]}>\n                                        {'Monday\\n25'}\n                                    </Text>\n                                </View>\n                            </TouchableOpacity>\n\n                            <TouchableOpacity\n                                onPress= {() => deliveryDateHandler('Tuesday')}>\n                                <View style= {[styles.dateBtn, {backgroundColor: tuesSelected? '#FF792E':'#FFE7D9'}]}>\n                                    <Text style={[styles.dateText, { color: tuesSelected? 'white': '#FF792E'}]}>\n                                        {'Tuesday\\n26'}\n                                    </Text>\n                                </View>\n                            </TouchableOpacity>\n\n                            <TouchableOpacity\n                                onPress= {() => deliveryDateHandler('Wednesday')}>\n                                <View style= {[styles.dateBtn, {backgroundColor: wedSelected?'#FF792E':'#FFE7D9'}]}>\n                                    <Text style={[styles.dateText, { color: wedSelected? 'white': '#FF792E'}]}>\n                                        {'Wednesday\\n27'}\n                                    </Text>\n                                </View>\n                            </TouchableOpacity>\n\n                        </View>\n                    \n                    }\n\n                    {/* Yes and no buttons of second slide. */}\n                    {currentSlideIndex == 1 &&\n                    <View style = {styles.answerBtn}>\n                        <TouchableOpacity \n                            style={styles.nextButton }\n                            onPress={skipDiet}>\n                            <Text\n                                style={styles.buttonTextNo}>\n                                No\n                            </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                            style={styles.nextButton}\n                            onPress={goNext}>\n                            <Text\n                                style={styles.buttonTextYes}>\n                                Yes\n                            </Text>\n                        </TouchableOpacity>\n                    </View>}\n\n\n                </View>\n            </View>\n        );\n    };\n\n    return (\n        // Main Choosing Ingredients component.\n        <SafeAreaView style={styles.onboardingBg}>\n            <NavIndicator/>\n            <FlatList\n                ref={ref}\n                showsHorizontalScrollIndicator={false}\n                horizontal\n                data={slides}\n                extraData={selected}\n                pagingEnabled\n                scrollEnabled= {false}\n                renderItem={({item}) => <Slide item={item} />}\n            />\n            <ButtonNav/>\n\n        </SafeAreaView>\n\n        \n    );\n}\n\n// Styles.\nconst styles = StyleSheet.create({\n\n    onboardingBg:{\n        backgroundColor: '#F3EDE5', \n        flex: 1,\n        justifyContent: 'center', \n        alignItems: 'center',\n        padding: '1%',\n    },\n\n    mainScreen:{\n        width: windowWidth,\n        paddingRight: '10%',\n        paddingLeft: '10%',\n        paddingTop: '5%',\n        justifyContent: 'center',\n        flex: 1\n    },\n\n    slideWrapper:{\n        justifyContent: 'center',\n        flex: 1,\n        backgroundColor: '#FBF9F8',\n        borderRadius: 30,\n    },\n\n    slideImg:{\n        alignSelf: 'center',\n        resizeMode: 'contain',\n        height: '40%',\n        width: '90%',\n        paddingBottom: '10%'\n    },\n\n    nextButton:{\n        justifyContent: 'center', \n        alignItems: 'center',\n    },\n\n    titleText:{\n        color: '#2D2D2D',\n        fontSize: 30,\n        lineHeight: 40,\n        fontWeight: '500',\n        textAlign: 'center',\n        paddingHorizontal: '10%',\n        paddingBottom: '2%',  \n\n    },\n\n    subtitleText:{\n        color: '#2D2D2D',\n        fontSize: 25,\n        fontWeight: '400',\n        textAlign: 'center',\n        lineHeight: 30,\n\n    },\n\n    submitText:{\n        color: '#2D2D2D',\n        fontSize: 25,\n        fontWeight: '400',\n        textAlign: 'center',\n        lineHeight: 30,\n        paddingBottom: '5%',\n    },\n\n    buttonNavs:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: windowWidth,\n        flex: 1\n    },\n\n    buttonTextBack:{\n        fontSize: 30,\n    },\n\n    buttonTextNext:{\n        fontSize: 30,\n        color:'#FF792E',\n    },\n\n    buttonTextNo:{\n        fontSize: 30,\n        color:'#666666'\n    },\n\n    buttonTextYes:{\n        fontSize: 30,\n        color:'#FF792E',\n\n    },\n\n    buttonQuestionText:{\n        fontSize: 20,\n        color: '#205ECF'\n\n    },\n    answerBtn:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        paddingHorizontal: '15%',\n\n    },\n\n    indicator: {\n        flex: 1,\n        height: 40,\n        width: 50,\n        backgroundColor: '#EDE7E7',\n        marginHorizontal: 3,\n        borderRadius: 5,\n        justifyContent: 'center',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n\n    indicatorWrapper:{\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginHorizontal: '10%',\n    },\n\n    navText:{\n        fontSize: 15,\n        fontWeight: '500',\n        textAlign: 'center',\n        color: '#fff', \n    },\n\n    textInputArea:{\n        height: 50,\n        width: 500,\n        padding: 10,\n        fontSize: 30,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 3,\n        borderColor: 'white',\n        shadowColor: 'black',\n        alignSelf: 'center',\n        marginBottom: '5%',\n\n    },\n    dietaryImg:{\n        padding: '2%',\n    },\n\n    listImg:{\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        flex: 1, \n\n    },\n\n    kitImg:{\n        margin:'1%',\n        resizeMode: 'contain',\n        height: 250,\n        width: 250,\n\n    },\n\n    checkbox:{\n        height: 50,\n        width: 50,\n        borderRadius: 100,\n        position: 'absolute', \n        zIndex: 1,\n        top: 30,\n        left: 180,\n    },\n\n    selectServingSize:{\n        flexDirection: 'row',\n        paddingHorizontal: '20%',\n        paddingBottom: '5%',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        flex: 1\n    },\n\n    deliveryDate:{\n        paddingTop: '5%',\n        flexDirection: 'row',\n        justifyContent:'space-around',\n    },\n\n    dateText:{\n        fontSize: 30,\n        lineHeight: 40,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    \n    },\n\n    dateBtn:{\n        width: 200,\n        height: 300,\n        borderRadius: 100,\n        justifyContent: 'center',\n\n    },\n\n});\n\nexport default ChoosingIngredients;"]},"metadata":{},"sourceType":"module"}