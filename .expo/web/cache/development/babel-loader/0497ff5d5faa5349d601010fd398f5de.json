{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/components/Post.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DisplayPicture from \"../components/DisplayPicture\";\nimport { Text, View } from \"../components/Themed\";\n\nfunction Post(_ref) {\n  var type = _ref.type,\n      img = _ref.img,\n      text = _ref.text,\n      desc = _ref.desc,\n      comments = _ref.comments,\n      member = _ref.member;\n\n  var _React$useState = React.useState(type === \"imageOnly\" ? true : false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasImg = _React$useState2[0],\n      setHasImg = _React$useState2[1];\n\n  var _React$useState3 = React.useState(type === \"textOnly\" ? true : false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      hasText = _React$useState4[0],\n      setHasText = _React$useState4[1];\n\n  var _React$useState5 = React.useState(type === (\"imageDesc\" || 'textOnly') ? true : false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      hasDesc = _React$useState6[0],\n      setHasDesc = _React$useState6[1];\n\n  var postImg = React.createElement(Image, {\n    source: {\n      uri: img\n    },\n    style: styles.postImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  });\n  var postText = React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }\n  }, text);\n  var postDesc = React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }\n  }, desc);\n  return React.createElement(View, {\n    style: styles.post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.topArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, React.createElement(DisplayPicture, {\n    id: (member == null ? void 0 : member.id) - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, member == null ? void 0 : member.displayName)), React.createElement(View, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, hasDesc && postDesc)), React.createElement(View, {\n    style: styles.postContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, hasImg && postImg, hasText && postText), React.createElement(View, {\n    style: styles.actionButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.commentBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Comment on \" + ((member == null ? void 0 : member.displayName) === 'Me' ? 'my' : (member == null ? void 0 : member.displayName) + '\\'s ') + \" post\")), React.createElement(TouchableOpacity, {\n    style: styles.heart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/heart.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })))));\n}\n\nvar styles = StyleSheet.create({\n  post: {\n    width: 400,\n    height: 400,\n    marginRight: 100\n  },\n  topArea: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: 'red'\n  },\n  user: {\n    flex: 1,\n    height: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  description: {\n    flex: 3,\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  postContainer: {\n    flex: 4,\n    backgroundColor: '#F1F1F1',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  actionButtons: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  addComment: {\n    flex: 1\n  },\n  postImage: {\n    height: '100%',\n    width: '100%'\n  },\n  commentBtn: {\n    alignItems: 'center',\n    flex: 1\n  },\n  heart: {\n    flex: 1\n  }\n});\nexport default Post;","map":{"version":3,"sources":["/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/components/Post.tsx"],"names":["React","DisplayPicture","Text","View","Post","type","img","text","desc","comments","member","useState","hasImg","setHasImg","hasText","setHasText","hasDesc","setHasDesc","postImg","uri","styles","postImage","postText","postDesc","post","topArea","user","id","displayName","description","postContainer","actionButtons","addComment","commentBtn","heart","require","StyleSheet","create","width","height","marginRight","flex","flexDirection","justifyContent","backgroundColor","alignItems"],"mappings":"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","sourcesContent":["import { FLIPPED_ALIAS_KEYS, switchStatement, tSImportEqualsDeclaration } from '@babel/types';\nimport React from 'react';\nimport { StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport DisplayPicture from '../components/DisplayPicture';\nimport { Text, View} from '../components/Themed';\n\n\n\nfunction Post({type, img, text, desc, comments, member}) {\n\n    const [hasImg, setHasImg] = React.useState( type === \"imageOnly\" ? true : false);\n    const [hasText, setHasText] = React.useState(type === \"textOnly\" ? true : false);\n    const [hasDesc, setHasDesc] = React.useState(type === (\"imageDesc\" || 'textOnly') ? true : false);\n\n    const postImg = <Image source={{uri: img}} style= {styles.postImage}/>\n    const postText = <Text>{text}</Text>\n    const postDesc = <Text>{desc}</Text>\n    return (\n        <View style={styles.post}>\n            <View style={styles.topArea}>\n                <View style = {styles.user}>\n                    <DisplayPicture id ={member?.id-1}/>\n                    <Text>{member?.displayName}</Text>\n                </View>\n                <View style = {styles.description}>\n                    {/* show  description if there is description*/}\n                    {hasDesc && postDesc} \n                </View>\n            </View>\n\n            <View style = {styles.postContainer}>\n                {/* show  image and text if there is */}\n                {hasImg && postImg}\n                {hasText && postText}\n            </View>\n            \n            <View style={styles.actionButtons}>\n                <View style = {styles.addComment}>\n                    <TouchableOpacity style={styles.commentBtn}>\n                        <Text>\n                            {`Comment on ${member?.displayName === 'Me' ? 'my' : (member?.displayName + '\\'s ')}` +  ` post`}\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity style={styles.heart}>\n                        <Image\n                            source={require('../assets/images/heart.png')}\n                        />\n                    </TouchableOpacity>\n\n\n                </View>\n\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    post:{\n        width: 400,\n        height: 400,\n        marginRight: 100,\n    },\n    topArea:{\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n\n        backgroundColor:'red',\n    },\n    user:{\n        // width: '25%',\n        flex: 1,\n        height: '100%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n\n    },\n    description:{\n        flex: 3,\n        // backgroundColor: 'purple',\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n\n\n    },\n\n    postContainer:{\n        flex: 4,\n        backgroundColor: '#F1F1F1',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    actionButtons:{\n        flex: 1,\n        // flexDirection: 'row',\n        // justifyContent: 'center',\n        alignItems: 'center'\n    },\n\n    addComment:{\n        flex:1\n    },\n    postImage:{\n        height: '100%',\n        width: '100%'\n    },\n    commentBtn:{\n        alignItems: 'center',\n        flex: 1,\n\n    },\n    heart:{\n        flex:1\n    }\n\n\n\n\n})\nexport default Post;"]},"metadata":{},"sourceType":"module"}