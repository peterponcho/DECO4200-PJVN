{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/screens/OnboardingScreen.tsx\";\nimport * as React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\n\nfunction OnboardingScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var ref = React.useRef();\n  var haveCardTitle = 'Sign Up with your mealshare card';\n  var noCardTitle = 'Don’t Have a card?';\n  var haveCardSub = 'To create your MealShare account, you must have your registered Harris Farm card ready. It looks like this:';\n  var noCardSub = 'Head to your nearest Harris Farm to create your MealShare membership card and account.';\n  var identityText = 'What is your full name?';\n  var identityWrong = 'Your full name seems to be wrong. Please make sure you check the spelling.';\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentSlideIndex = _React$useState2[0],\n      setCurrentSlideIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      hasCard = _React$useState4[0],\n      setHasCard = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      showNext = _React$useState6[0],\n      setShowNext = _React$useState6[1];\n\n  var _React$useState7 = React.useState(haveCardTitle),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      altTitle = _React$useState8[0],\n      setAltTitle = _React$useState8[1];\n\n  var _React$useState9 = React.useState(haveCardSub),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      altSub = _React$useState10[0],\n      setAltSub = _React$useState10[1];\n\n  var _React$useState11 = React.useState(identityText),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      identitySub = _React$useState12[0],\n      setIdentitySub = _React$useState12[1];\n\n  var inputText = React.useRef();\n  var slides = [{\n    id: '1',\n    image: require(\"../assets/images/landingImg.png\"),\n    title: 'Welcome to Mealshare',\n    subtitle: 'Embark on a cooking journey with your friends and families. Cook with fresh ingredients from  Harris Farms and share recipes, photos and tips.'\n  }, {\n    id: '2',\n    image: require(\"../assets/images/sampleCard.png\"),\n    title: altTitle,\n    subtitle: altSub\n  }, {\n    id: '3',\n    image: require(\"../assets/images/tapCard.png\"),\n    title: 'Tap your card here',\n    subtitle: 'Tapping your card here will sync your details onto the device for a quick sign up process.'\n  }, {\n    id: '4',\n    image: require(\"../assets/images/successful.png\"),\n    title: 'Your tap was successful',\n    subtitle: null\n  }, {\n    id: '5',\n    image: null,\n    title: 'Verify your identity',\n    subtitle: identitySub\n  }, {\n    id: '6',\n    image: require(\"../assets/images/successful.png\"),\n    title: 'Verification successful',\n    subtitle: null\n  }, {\n    id: '7',\n    image: require(\"../assets/images/groupDp.png\"),\n    title: 'Your group',\n    subtitle: 'Mary Maroon has invited you to join their group called “The Maroon Family”.'\n  }, {\n    id: '8',\n    image: require(\"../assets/images/vidTutorial.png\"),\n    title: 'MealShare Tour',\n    subtitle: 'Taking you on a tour of MealShare to show you step by step how everything works.'\n  }];\n\n  var Slide = function Slide(_ref2) {\n    var item = _ref2.item;\n\n    if (item.id === '1') {\n      return React.createElement(View, {\n        style: styles.mainScreen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.slideWrapper,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: item == null ? void 0 : item.image,\n        style: styles.slideImg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.titleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, item == null ? void 0 : item.title), React.createElement(Text, {\n        style: styles.subtitleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, item == null ? void 0 : item.subtitle)));\n    } else {\n      return React.createElement(View, {\n        style: styles.mainScreen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.slideWrapper,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, item == null ? void 0 : item.title), React.createElement(Text, {\n        style: styles.subtitleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, item == null ? void 0 : item.subtitle), item.id === '3' && React.createElement(TouchableOpacity, {\n        onPress: goNext,\n        style: {\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: item == null ? void 0 : item.image,\n        style: styles.slideImg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      })), item.image && item.id !== '3' && React.createElement(Image, {\n        source: item == null ? void 0 : item.image,\n        style: styles.slideImg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 58\n        }\n      }), item.id === '5' && React.createElement(TextInput, {\n        style: styles.textInputArea,\n        placeholder: \"Tap to start typing\",\n        onChangeText: handleEditChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 44\n        }\n      })));\n    }\n  };\n\n  var handleEditChange = function handleEditChange(text) {\n    inputText.current = text;\n  };\n\n  var goNext = function goNext() {\n    var allClear = true;\n\n    if (currentSlideIndex == 4) {\n      var currentText = inputText.current;\n\n      if ((currentText == null ? void 0 : currentText.toUpperCase().replace(\" \", \"\")) != 'LISAMAROON') {\n        allClear = false;\n        setIdentitySub(identityWrong);\n      } else {\n        setIdentitySub(identityText);\n      }\n\n      inputText.current = '';\n    }\n\n    if (allClear) {\n      var nextSlideIndex = currentSlideIndex + 1;\n\n      if (nextSlideIndex != slides.length) {\n        var offset = nextSlideIndex * windowWidth;\n        ref == null ? void 0 : ref.current.scrollToOffset({\n          offset: offset\n        });\n        setCurrentSlideIndex(currentSlideIndex + 1);\n      } else {\n        navigation.navigate(\"Mealshare\");\n      }\n    }\n  };\n\n  var goBack = function goBack() {\n    if (!hasCard) {\n      setAltTitle(haveCardTitle);\n      setAltSub(haveCardSub);\n      setShowNext(true);\n      setHasCard(true);\n    } else {\n      var nextSlideIndex = currentSlideIndex - 1;\n\n      if (nextSlideIndex >= 0) {\n        var offset = nextSlideIndex * windowWidth;\n        ref == null ? void 0 : ref.current.scrollToOffset({\n          offset: offset\n        });\n        setCurrentSlideIndex(currentSlideIndex - 1);\n      }\n    }\n\n    setIdentitySub(identityText);\n    inputText.current = '';\n  };\n\n  var noCard = function noCard() {\n    setAltTitle(noCardTitle);\n    setAltSub(noCardSub);\n    setShowNext(false);\n    setHasCard(false);\n  };\n\n  var ButtonNav = function ButtonNav() {\n    return React.createElement(View, {\n      style: styles.buttonNavs,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, currentSlideIndex != 0 && React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: goBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 44\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, \"Back\")), currentSlideIndex == 1 && hasCard && React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: noCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, \"I Don't have a card\")), showNext && currentSlideIndex != 2 && React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: goNext,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 56\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, \"Next\")));\n  };\n\n  var navInfo = [{\n    id: '1',\n    title: 'Scan Card'\n  }, {\n    id: '2',\n    title: 'Verify It’s You'\n  }, {\n    id: '3',\n    title: 'Groups'\n  }, {\n    id: '4',\n    title: 'Tutorials'\n  }];\n\n  var NavIndicator = function NavIndicator() {\n    if (currentSlideIndex == 0) {\n      return null;\n    }\n\n    return React.createElement(View, {\n      style: styles.indicatorWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, navInfo.map(function (item, index) {\n      return React.createElement(View, {\n        key: index,\n        style: [styles.indicator, (currentSlideIndex < 4 && index == 0 || currentSlideIndex < 6 && currentSlideIndex >= 4 && index <= 1 || currentSlideIndex == 6 && index <= 2 || currentSlideIndex == 7 && index <= 3) && {\n          backgroundColor: \"#205ECF\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.navText, !(currentSlideIndex < 4 && index == 0 || currentSlideIndex < 6 && currentSlideIndex >= 4 && index <= 1 || currentSlideIndex == 6 && index <= 2 || currentSlideIndex == 7 && index <= 3) && {\n          color: \"#C4C4C4\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, item.id + \"  \" + item.title));\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.onboardingBg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, React.createElement(NavIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    ref: ref,\n    showsHorizontalScrollIndicator: false,\n    horizontal: true,\n    data: slides,\n    pagingEnabled: true,\n    scrollEnabled: false,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Slide, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 41\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }), React.createElement(ButtonNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  onboardingBg: {\n    backgroundColor: '#F3EDE5',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '1%'\n  },\n  mainScreen: {\n    width: windowWidth,\n    paddingRight: '10%',\n    paddingLeft: '10%',\n    paddingTop: '5%',\n    flex: 1\n  },\n  slideWrapper: {\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  slideImg: {\n    resizeMode: 'contain',\n    height: '70%',\n    width: '100%'\n  },\n  nextButton: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  titleText: {\n    color: '#FF792E',\n    fontSize: 50,\n    lineHeight: 50,\n    fontWeight: 'bold',\n    paddingBottom: '2%'\n  },\n  subtitleText: {\n    fontSize: 25,\n    fontWeight: '500',\n    lineHeight: 30,\n    paddingBottom: '2%'\n  },\n  buttonNavs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: windowWidth,\n    flex: 1\n  },\n  buttonText: {\n    fontSize: 30\n  },\n  indicator: {\n    flex: 1,\n    height: 40,\n    width: 50,\n    backgroundColor: '#EDE7E7',\n    marginHorizontal: 3,\n    borderRadius: 5,\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  indicatorWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginHorizontal: '10%'\n  },\n  navText: {\n    fontSize: 20,\n    fontWeight: '500',\n    color: '#fff'\n  },\n  textInputArea: {\n    height: 80,\n    padding: 10,\n    fontSize: 40,\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: '#FF792E'\n  }\n});\nexport default OnboardingScreen;","map":{"version":3,"sources":["/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/screens/OnboardingScreen.tsx"],"names":["React","windowWidth","Dimensions","get","width","windowHeight","height","OnboardingScreen","navigation","ref","useRef","haveCardTitle","noCardTitle","haveCardSub","noCardSub","identityText","identityWrong","useState","currentSlideIndex","setCurrentSlideIndex","hasCard","setHasCard","showNext","setShowNext","altTitle","setAltTitle","altSub","setAltSub","identitySub","setIdentitySub","inputText","slides","id","image","require","title","subtitle","Slide","item","styles","mainScreen","slideWrapper","slideImg","titleText","subtitleText","goNext","justifyContent","textInputArea","handleEditChange","text","current","allClear","currentText","toUpperCase","replace","nextSlideIndex","length","offset","scrollToOffset","navigate","goBack","noCard","ButtonNav","buttonNavs","nextButton","buttonText","navInfo","NavIndicator","indicatorWrapper","map","index","indicator","backgroundColor","navText","color","onboardingBg","StyleSheet","create","flex","alignItems","padding","paddingRight","paddingLeft","paddingTop","resizeMode","fontSize","lineHeight","fontWeight","paddingBottom","flexDirection","marginHorizontal","borderRadius","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextInput, SafeAreaView, View, Image, Text, StyleSheet, Dimensions, FlatList, TouchableOpacity} from 'react-native';\n// https://github.com/hakymz/OnboardingScreenAppReactNative/blob/main/src/screens/OnboardingScreen.js\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\n\nfunction OnboardingScreen({navigation}) {\n\n    const ref = React.useRef(); // Reference the flatlist\n\n    // Alternative subtitle and titles\n    const haveCardTitle = 'Sign Up with your mealshare card'; \n    const noCardTitle = 'Don’t Have a card?';\n    const haveCardSub = 'To create your MealShare account, you must have your registered Harris Farm card ready. It looks like this:';\n    const noCardSub = 'Head to your nearest Harris Farm to create your MealShare membership card and account.';\n    const identityText =  'What is your full name?';\n    const identityWrong = 'Your full name seems to be wrong. Please make sure you check the spelling.'\n\n\n    const [currentSlideIndex, setCurrentSlideIndex] = React.useState(0);\n    const [hasCard, setHasCard] = React.useState(true);\n    const [showNext, setShowNext] = React.useState(true);\n    const [altTitle, setAltTitle] = React.useState(haveCardTitle);\n    const [altSub, setAltSub] = React.useState(haveCardSub);\n    const [identitySub, setIdentitySub] = React.useState(identityText);\n    const inputText = React.useRef(); // Full name input text\n\n    // Onboarding slides.\n    const slides = [\n        {\n            id: '1',\n            image: require('../assets/images/landingImg.png'),\n            title: 'Welcome to Mealshare',\n            subtitle: 'Embark on a cooking journey with your friends and families. Cook with fresh ingredients from  Harris Farms and share recipes, photos and tips.',\n        },\n        {\n            id: '2',\n            image: require('../assets/images/sampleCard.png'),\n            title: altTitle,\n            subtitle: altSub,\n        },\n        {\n            id: '3',\n            image: require('../assets/images/tapCard.png'),\n            title: 'Tap your card here',\n            subtitle: 'Tapping your card here will sync your details onto the device for a quick sign up process.',\n        },\n        {\n            id: '4',\n            image: require('../assets/images/successful.png'),\n            title: 'Your tap was successful',\n            subtitle: null,\n        },\n        {\n            id: '5',\n            image: null,\n            title: 'Verify your identity',\n            subtitle: identitySub,\n        },\n        {\n            id: '6',\n            image: require('../assets/images/successful.png'),\n            title: 'Verification successful',\n            subtitle: null,\n        },\n        {\n            id: '7',\n            image: require('../assets/images/groupDp.png'),\n            title: 'Your group',\n            subtitle: 'Mary Maroon has invited you to join their group called “The Maroon Family”.',\n        },\n        {\n            id: '8',\n            image: require('../assets/images/vidTutorial.png'),\n            title: 'MealShare Tour',\n            subtitle: 'Taking you on a tour of MealShare to show you step by step how everything works.',\n        },\n      ];\n\n    // Slide component.\n    const Slide = ({item}) => {\n\n        // if landing screen, then image comes first.\n        if (item.id === '1') {\n            return(\n                <View style= {styles.mainScreen}>\n                    <View style= {styles.slideWrapper}>\n                        <Image\n                            source={item?.image}\n                            style={styles.slideImg}\n                        />\n\n                        <Text\n                        style={styles.titleText}>\n                            {item?.title}\n                        </Text>\n\n                        <Text\n                        style= {styles.subtitleText}>\n                            {item?.subtitle}\n                        </Text>\n\n                    </View>\n\n\n                </View>\n            );\n        \n        // Else image comes last.\n        }else{\n            return(\n                <View style= {styles.mainScreen}>\n                    <View style= {styles.slideWrapper}>\n\n                        <Text\n                        style={styles.titleText}>\n                            {item?.title}\n                        </Text>\n        \n                        <Text\n                        style= {styles.subtitleText}>\n                            {item?.subtitle}\n                        </Text>\n\n                        {/* Image as button for tap card slide */}\n                        {item.id === '3' && \n                            <TouchableOpacity\n                                onPress={goNext}\n                                style = {{justifyContent: 'center'}}> \n                                <Image\n                                source={item?.image}\n                                style={styles.slideImg}\n                            />\n                            </TouchableOpacity>\n                            \n                            }\n\n                        {item.image && item.id !== '3'&& <Image\n                        source={item?.image}\n                        style={styles.slideImg}\n                        />}\n\n                        {/* Text input for identity verification slide */}\n                        {item.id === '5'&& <TextInput \n                        style={styles.textInputArea}\n                        placeholder=\"Tap to start typing\"\n                        onChangeText={handleEditChange}\n                        />}\n        \n                    </View>\n        \n        \n                </View>\n        \n            );\n        }\n    }\n    // Captures text input.\n    const handleEditChange = (text: string) =>{\n        inputText.current = text;\n\n    }\n\n    // Handles next button\n    const goNext = () => {\n        let allClear = true; // To prevent going next if user inputs wrong full name.\n\n        // If current slide is identity verification slide then check input string.\n        if (currentSlideIndex == 4){\n            const currentText = inputText.current;\n\n            // if input string is not the correct fullname then change text and\n            // rpevent from going to next slide.\n            if (currentText?.toUpperCase().replace(\" \", \"\") != 'LISAMAROON'){\n                allClear = false;\n                setIdentitySub(identityWrong);\n            }else{\n                setIdentitySub(identityText);\n            }\n            // Reset imput text.\n            inputText.current = '';\n            \n\n\n        }\n\n        // Go to next slide.\n        // Or to bulletin board if no slides left.\n        if (allClear){\n            const nextSlideIndex = currentSlideIndex + 1;\n\n            if (nextSlideIndex != slides.length) {\n                const offset = nextSlideIndex * windowWidth;\n                ref?.current.scrollToOffset({offset});\n                setCurrentSlideIndex(currentSlideIndex + 1);\n\n            }else{\n                navigation.navigate(\"Mealshare\");\n            }\n\n        }\n\n      };\n\n      // Handles back button.\n    const goBack = () => {\n\n        // Back button for 'Don't have mealshare card' screen.\n        if(!hasCard){\n            setAltTitle(haveCardTitle);\n            setAltSub(haveCardSub);\n            setShowNext(true);\n            setHasCard(true);\n\n        \n        // Go to previous slide.\n        }else{\n            const nextSlideIndex = currentSlideIndex - 1;\n            if (nextSlideIndex >=0) {\n            const offset = nextSlideIndex * windowWidth;\n            ref?.current.scrollToOffset({offset});\n            setCurrentSlideIndex(currentSlideIndex - 1);\n            }\n        }\n\n        // Reset text input.\n        setIdentitySub(identityText);\n        inputText.current = '';\n\n    };\n\n    // Handles 'I don't have a card' button on slide 1.\n    const noCard = () =>{\n        setAltTitle(noCardTitle);\n        setAltSub(noCardSub);\n        setShowNext(false);\n        setHasCard(false);\n    }\n\n    // Bottom navigation buttons of the screen.\n    const ButtonNav = () => {\n        return (\n            <View\n            style = {styles.buttonNavs}>\n\n                {/* No back button on landing screen */}\n                {currentSlideIndex != 0 && <TouchableOpacity \n                style={styles.nextButton}\n                onPress={goBack}>\n                    <Text\n                        style = {styles.buttonText}>\n                        Back\n                    </Text>\n                </TouchableOpacity>}\n                \n                {/* Button only in 'Sign up you meakshare card' slide */}\n                {currentSlideIndex == 1 && hasCard && \n                <TouchableOpacity \n                style={styles.nextButton}\n                onPress={noCard}>\n                    <Text\n                        style={styles.buttonText}>\n                        I Don't have a card\n                    </Text>\n                </TouchableOpacity>}\n                \n                {/* No next button on 'Tap card' slide */}\n                {showNext && currentSlideIndex != 2 && <TouchableOpacity \n                style={styles.nextButton}\n                onPress={goNext}>\n                    <Text\n                        style={styles.buttonText}>\n                        Next\n                    </Text>\n                </TouchableOpacity>}\n\n\n            </View>\n        );\n    }\n\n    // Top navigation indicator bar.\n    const navInfo = [\n        {\n            id: '1',\n            title: 'Scan Card',\n        },\n        {\n            id: '2',\n            title: 'Verify It’s You',\n        },\n        {\n            id: '3',\n            title: 'Groups',\n        },\n        {\n            id: '4',\n            title: 'Tutorials',\n        },\n\n    ];\n\n    // Top navigation indicator bar component.\n    const NavIndicator = () =>{\n\n        // No bar on landing page.\n        if (currentSlideIndex == 0){\n            return(null);\n        }\n\n        return(\n            <View\n                style={styles.indicatorWrapper}>\n\n                {/* 'Scan card' on slides with id 1,2,3\n                'Verify it's you' on slides with id 4, 5\n                'Groups' on slides with id 6\n                'Tutorials' on slides with id 7 */}\n                {navInfo.map((item, index) => (\n                <View\n                    key={index}\n                    style={[\n                    styles.indicator,\n                    (currentSlideIndex < 4 && index == 0 || \n                    currentSlideIndex < 6 && currentSlideIndex >=4 && index <= 1 ||\n                    currentSlideIndex == 6 &&  index <= 2 ||\n                    currentSlideIndex == 7 &&  index <= 3)\n                    && {\n                        backgroundColor: \"#205ECF\",\n\n                    },\n                    ]}>\n                        <Text style = {[styles.navText,   \n                        !(currentSlideIndex < 4 && index == 0 || \n                        currentSlideIndex < 6 && currentSlideIndex >=4 && index <= 1 ||\n                        currentSlideIndex == 6 &&  index <= 2 ||\n                        currentSlideIndex == 7 &&  index <= 3)\n                        && {\n                        color: \"#C4C4C4\"}]}>{item.id + \"  \" + item.title}</Text>\n\n                </View>\n                ))}\n\n            </View>\n\n        );\n\n    }\n\n    // Main onboarding component.\n    return (\n        <SafeAreaView style={styles.onboardingBg}>\n            <NavIndicator/>\n            <FlatList\n                ref={ref}\n                showsHorizontalScrollIndicator={false}\n                horizontal\n                data={slides}\n                pagingEnabled\n                scrollEnabled= {false}\n                renderItem={({item}) => <Slide item={item} />}\n            />\n            <ButtonNav/>\n\n        </SafeAreaView>\n    );\n\n}\n\nconst styles = StyleSheet.create({\n\n    onboardingBg:{\n        backgroundColor: '#F3EDE5', \n        flex: 1,\n        justifyContent: 'center', \n        alignItems: 'center',\n        padding: '1%',\n    },\n\n    mainScreen:{\n        width: windowWidth,\n        paddingRight: '10%',\n        paddingLeft: '10%',\n        paddingTop: '5%',\n        flex: 1\n    },\n\n    slideWrapper:{\n        justifyContent: 'flex-start',\n        flex: 1\n    },\n\n    slideImg:{\n        resizeMode: 'contain',\n        height: '70%',\n        width: '100%',\n    },\n\n    nextButton:{\n        justifyContent: 'center', \n        alignItems: 'center',\n    },\n\n    titleText:{\n        color: '#FF792E',\n        fontSize: 50,\n        lineHeight: 50,\n        fontWeight: 'bold',\n        paddingBottom: '2%',  \n    },\n\n    subtitleText:{\n        fontSize: 25,\n        fontWeight: '500',\n        lineHeight: 30,\n        paddingBottom: '2%',\n    },\n\n    buttonNavs:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: windowWidth,\n        flex: 1\n    },\n\n    buttonText:{\n        fontSize: 30\n    },\n\n    indicator: {\n        flex: 1,\n        height: 40,\n        width: 50,\n        backgroundColor: '#EDE7E7',\n        marginHorizontal: 3,\n        borderRadius: 5,\n        justifyContent: 'center',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n\n    indicatorWrapper:{\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginHorizontal: '10%',\n    },\n\n    navText:{\n        fontSize: 20,\n        fontWeight: '500',\n        color: '#fff'\n    },\n\n    textInputArea:{\n        height: 80,\n        padding: 10,\n        fontSize: 40,\n        borderRadius: 10,\n        borderWidth: 3,\n        borderColor: '#FF792E',\n    }\n\n});\n\nexport default OnboardingScreen;"]},"metadata":{},"sourceType":"module"}