{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/screens/OnboardingScreen.tsx\";\nimport * as React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar slides = [{\n  id: '1',\n  image: require(\"../assets/images/landingImg.png\"),\n  title: 'Welcome to Mealshare',\n  subtitle: 'Embark on a cooking journey with your friends and families. Cook with fresh ingredients from  Harris Farms and share recipes, photos and tips.'\n}, {\n  id: '2',\n  image: require(\"../assets/images/sampleCard.png\"),\n  title: 'Sign Up with your mealshare card',\n  subtitle: 'To create your MealShare account, you must have your registered Harris Farm card ready. It looks like this:'\n}, {\n  id: '3',\n  image: require(\"../assets/images/tapCard.png\"),\n  title: 'Tap your card here ',\n  subtitle: 'Tapping your card here will sync your details onto the device for a quick sign up process.'\n}, {\n  id: '4',\n  image: require(\"../assets/images/successful.png\"),\n  title: 'Your tap was successful',\n  subtitle: null\n}, {\n  id: '5',\n  image: require(\"../assets/images/successful.png\"),\n  title: 'Verify your identity',\n  subtitle: 'What is your full name?'\n}];\n\nfunction OnboardingScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentSlideIndex = _React$useState2[0],\n      setCurrentSlideIndex = _React$useState2[1];\n\n  var Slide = function Slide(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.mainScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.slideWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: item == null ? void 0 : item.image,\n      style: styles.slideImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.titleText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, item == null ? void 0 : item.title), React.createElement(Text, {\n      style: styles.subtitleText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, item == null ? void 0 : item.subtitle)));\n  };\n\n  var ref = React.useRef();\n\n  var goNext = function goNext() {\n    console.log(\"going next\", currentSlideIndex);\n    var nextSlideIndex = currentSlideIndex + 1;\n\n    if (nextSlideIndex != slides.length) {\n      var offset = nextSlideIndex * windowWidth;\n      ref == null ? void 0 : ref.current.scrollToOffset({\n        offset: offset\n      });\n      setCurrentSlideIndex(currentSlideIndex + 1);\n    }\n  };\n\n  var goBack = function goBack() {\n    console.log(\"going back\", currentSlideIndex);\n    var nextSlideIndex = currentSlideIndex - 1;\n\n    if (nextSlideIndex >= 0) {\n      var offset = nextSlideIndex * windowWidth;\n      ref == null ? void 0 : ref.current.scrollToOffset({\n        offset: offset\n      });\n      setCurrentSlideIndex(currentSlideIndex - 1);\n    }\n  };\n\n  var ButtonNav = function ButtonNav() {\n    return React.createElement(View, {\n      style: styles.buttonNavs,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: goBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Back\")), React.createElement(TouchableOpacity, {\n      style: styles.nextButton,\n      onPress: goNext,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Next\")));\n  };\n\n  var navInfo = [{\n    id: '1',\n    title: 'Scan Card'\n  }, {\n    id: '2',\n    title: 'Verify It’s You'\n  }, {\n    id: '3',\n    title: 'Groups'\n  }, {\n    id: '4',\n    title: 'Tutorials'\n  }];\n\n  var NavIndicator = function NavIndicator() {\n    return React.createElement(View, {\n      style: styles.indicatorWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, navInfo.map(function (item, index) {\n      return React.createElement(View, {\n        key: index,\n        style: [styles.indicator, currentSlideIndex == index && {\n          backgroundColor: \"#205ECF\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.navText, currentSlideIndex != index && {\n          color: \"#C4C4C4\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, item.id + \"  \" + item.title));\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.onboardingBg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, React.createElement(NavIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    ref: ref,\n    showsHorizontalScrollIndicator: false,\n    horizontal: true,\n    data: slides,\n    pagingEnabled: true,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Slide, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 41\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), React.createElement(ButtonNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  onboardingBg: {\n    backgroundColor: '#F3EDE5',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '1%'\n  },\n  mainScreen: {\n    width: windowWidth,\n    paddingRight: '10%',\n    paddingLeft: '10%',\n    paddingTop: '5%'\n  },\n  slideWrapper: {\n    justifyContent: 'space-between'\n  },\n  slideImg: {\n    height: '75%',\n    resizeMode: 'contain',\n    width: '100%'\n  },\n  nextButton: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  titleText: {\n    color: '#FF792E',\n    fontSize: 50,\n    lineHeight: 50,\n    fontWeight: 'bold'\n  },\n  subtitleText: {\n    fontSize: 20,\n    fontWeight: '500',\n    lineHeight: 30\n  },\n  buttonNavs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: windowWidth,\n    flex: 2\n  },\n  buttonText: {\n    fontSize: 30\n  },\n  indicator: {\n    flex: 1,\n    height: 40,\n    width: 50,\n    backgroundColor: '#EDE7E7',\n    marginHorizontal: 3,\n    borderRadius: 5,\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  indicatorWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginHorizontal: '10%'\n  },\n  navText: {\n    fontSize: 20,\n    fontWeight: '500',\n    color: '#fff'\n  }\n});\nexport default OnboardingScreen;","map":{"version":3,"sources":["/Users/nadyafelissa/Documents/UNI/UNI sem 6/DECO4200/a3/DECO4200-PJVN/screens/OnboardingScreen.tsx"],"names":["React","windowWidth","Dimensions","get","width","windowHeight","height","slides","id","image","require","title","subtitle","OnboardingScreen","navigation","useState","currentSlideIndex","setCurrentSlideIndex","Slide","item","styles","mainScreen","slideWrapper","slideImg","titleText","subtitleText","ref","useRef","goNext","console","log","nextSlideIndex","length","offset","current","scrollToOffset","goBack","ButtonNav","buttonNavs","nextButton","buttonText","navInfo","NavIndicator","indicatorWrapper","map","index","indicator","backgroundColor","navText","color","onboardingBg","StyleSheet","create","flex","justifyContent","alignItems","padding","paddingRight","paddingLeft","paddingTop","resizeMode","fontSize","lineHeight","fontWeight","flexDirection","marginHorizontal","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { SafeAreaView, View, Image, Text, StyleSheet, Dimensions, FlatList, Button, TouchableOpacity} from 'react-native';\n// https://github.com/hakymz/OnboardingScreenAppReactNative/blob/main/src/screens/OnboardingScreen.js\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst slides = [\n    {\n      id: '1',\n      image: require('../assets/images/landingImg.png'),\n      title: 'Welcome to Mealshare',\n      subtitle: 'Embark on a cooking journey with your friends and families. Cook with fresh ingredients from  Harris Farms and share recipes, photos and tips.',\n    },\n    {\n      id: '2',\n      image: require('../assets/images/sampleCard.png'),\n      title: 'Sign Up with your mealshare card',\n      subtitle: 'To create your MealShare account, you must have your registered Harris Farm card ready. It looks like this:',\n    },\n    {\n      id: '3',\n      image: require('../assets/images/tapCard.png'),\n      title: 'Tap your card here ',\n      subtitle: 'Tapping your card here will sync your details onto the device for a quick sign up process.',\n    },\n    {\n        id: '4',\n        image: require('../assets/images/successful.png'),\n        title: 'Your tap was successful',\n        subtitle: null,\n    },\n    {\n        id: '5',\n        image: require('../assets/images/successful.png'),\n        title: 'Verify your identity',\n        subtitle: 'What is your full name?',\n    },\n    // {\n    //     id: '6',\n    //     image: require('../assets/images/successful.png'),\n    //     title: 'Verification successful',\n    //     subtitle: null,\n    // },\n    // {\n    //     id: '7',\n    //     image: require('../assets/images/groupDp.png'),\n    //     title: 'Your group',\n    //     subtitle: 'Mary Maroon has invited you to join their group called “The Maroon Family”.',\n    // },\n    // {\n    //     id: '8',\n    //     image: require('../assets/images/vidTutorial.png'),\n    //     title: 'MealShare Tour',\n    //     subtitle: 'Taking you on a tour of MealShare to show you step by step how everything works.',\n    // },\n  ];\n\n\n\nfunction OnboardingScreen({navigation}) {\n    const [currentSlideIndex, setCurrentSlideIndex] = React.useState(0);\n\n    const Slide = ({item}) => {\n        // console.log(item.id);\n        return(\n            <View style= {styles.mainScreen}>\n                <View style= {styles.slideWrapper}>\n                    <Image\n                    source={item?.image}\n                    style={styles.slideImg}\n                    />\n                    <Text\n                    style={styles.titleText}>\n                        {item?.title}\n                    </Text>\n    \n                    <Text\n                    style= {styles.subtitleText}>\n                        {item?.subtitle}\n                    </Text>\n    \n                </View>\n    \n    \n            </View>\n    \n        );\n    \n    }\n\n\n    const ref = React.useRef();\n    const goNext = () => {\n        console.log(\"going next\", currentSlideIndex)\n        // scrollToItem()\n        // ref?.current.scrollToItem(2);\n        const nextSlideIndex = currentSlideIndex + 1;\n        if (nextSlideIndex != slides.length) {\n          const offset = nextSlideIndex * windowWidth;\n          ref?.current.scrollToOffset({offset});\n            // ref?.current.scrollToItem(2);\n          setCurrentSlideIndex(currentSlideIndex + 1);\n        }\n      };\n\n      const goBack = () => {\n        console.log(\"going back\", currentSlideIndex)\n        // scrollToItem()\n        // ref?.current.scrollToItem(2);\n        const nextSlideIndex = currentSlideIndex - 1;\n        if (nextSlideIndex >=0) {\n          const offset = nextSlideIndex * windowWidth;\n          ref?.current.scrollToOffset({offset});\n            // ref?.current.scrollToItem(2);\n          setCurrentSlideIndex(currentSlideIndex - 1);\n        }\n      };\n\n      const ButtonNav = () => {\n        return (\n            <View\n            style = {styles.buttonNavs}>\n                <TouchableOpacity \n                style={styles.nextButton}\n                onPress={goBack}>\n                    <Text\n                        style = {styles.buttonText}>\n                        Back\n                    </Text>\n                </TouchableOpacity>\n    \n                <TouchableOpacity \n                style={styles.nextButton}\n                onPress={goNext}>\n                    <Text\n                        style={styles.buttonText}>\n                        Next\n                    </Text>\n                </TouchableOpacity>\n    \n    \n            </View>\n        );\n    }\n\n    const navInfo = [\n        {\n            id: '1',\n            title: 'Scan Card',\n        },\n        {\n            id: '2',\n            title: 'Verify It’s You',\n        },\n        {\n            id: '3',\n            title: 'Groups',\n        },\n        {\n            id: '4',\n            title: 'Tutorials',\n        },\n\n    ];\n\n    const NavIndicator = () =>{\n        return(\n            <View\n                style={styles.indicatorWrapper}>\n\n                {/* Render indicator */}\n                {navInfo.map((item, index) => (\n                <View\n                    key={index}\n                    style={[\n                    styles.indicator,\n                    currentSlideIndex == index && {\n                        backgroundColor: \"#205ECF\",\n\n                    },\n                    ]}>\n                        <Text style = {[styles.navText,   currentSlideIndex != index && {\n                        color: \"#C4C4C4\"}]}>{item.id + \"  \" + item.title}</Text>\n\n                </View>\n                ))}\n\n            </View>\n\n        );\n\n    }\n    return (\n        <SafeAreaView style={styles.onboardingBg}>\n            <NavIndicator/>\n            <FlatList\n                ref={ref}\n                // onMomentumScrollEnd={updateCurrentSlideIndex}\n                // contentContainerStyle={{height: windowHeight * 0.75}}\n                showsHorizontalScrollIndicator={false}\n                horizontal\n                data={slides}\n                pagingEnabled\n                // scrollEnabled= {false}\n                renderItem={({item}) => <Slide item={item} />}\n            />\n            <ButtonNav/>\n\n            {/* <Slide item = {slides[0]}/> */}\n\n            {/* <TouchableOpacity \n            style={styles.nextButton}\n            onPress={() => navigation.navigate('Mealshare')}>\n                <Text>\n                    To Mealshare\n                </Text>\n            </TouchableOpacity> */}\n\n        </SafeAreaView>\n    );\n\n\n    \n}\nconst styles = StyleSheet.create({\n    onboardingBg:{\n        backgroundColor: '#F3EDE5', \n        flex: 1,\n        justifyContent: 'center', \n        alignItems: 'center',\n        padding: '1%',\n\n    },\n\n    mainScreen:{\n        width: windowWidth,\n        paddingRight: '10%',\n        paddingLeft: '10%',\n        paddingTop: '5%',\n        \n        // backgroundColor: 'yellow'\n        // justifyContent: 'center', \n        // alignItems: 'center',\n\n        // width: windowWidth*90/100, \n        // padding: '10%',\n\n    },\n    slideWrapper:{\n\n        // paddingRight: '10%',\n        // paddingLeft: '10%',\n        // paddingTop: '5%',\n        justifyContent: 'space-between'\n\n    },\n    slideImg:{\n\n        height: '75%', \n        resizeMode: 'contain',\n        // height: '100%',\n        width: '100%',\n        // backgroundColor: 'purple'\n        // resizeMode: 'contain',\n    },\n    nextButton:{\n        justifyContent: 'center', \n        alignItems: 'center',\n\n    },\n    titleText:{\n        color: '#FF792E',\n        fontSize: 50,\n        lineHeight: 50,\n        fontWeight: 'bold',\n\n        \n    },\n    subtitleText:{\n        fontSize: 20,\n        fontWeight: '500',\n        lineHeight: 30,\n\n\n    },\n    buttonNavs:{\n        // backgroundColor: 'red',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: windowWidth,\n        flex: 2\n    },\n    buttonText:{\n        fontSize: 30\n    },\n    indicator: {\n        flex: 1,\n        height: 40,\n        width: 50,\n        backgroundColor: '#EDE7E7',\n        marginHorizontal: 3,\n        borderRadius: 5,\n        justifyContent: 'center',\n        flexDirection: 'row',\n\n        // justifyContent: 'space-evenly',\n        alignItems: 'center'\n\n    },\n    indicatorWrapper:{\n        \n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginHorizontal: '10%',\n\n    },\n    navText:{\n\n        fontSize: 20,\n        fontWeight: '500',\n\n        color: '#fff'\n    }\n\n\n});\n\nexport default OnboardingScreen;"]},"metadata":{},"sourceType":"module"}